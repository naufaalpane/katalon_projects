@using System;
@using Toyota.Common.Web.Platform;
@using GPPSU.Commons.Constants;
@using GPPSU.Controllers;
@using GPPSU.Models.DeliveryPackingPartsNoM_PxP;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    IList<DeliveryPackingPartsNoM_PxP> ListDest = (List<DeliveryPackingPartsNoM_PxP>)ViewData["ListDest"];

}

@Html.Partial("_SearchCriteria")
<div id="divPreviewExcel">
    @Html.Partial("_ModalPreviewExcelUpload")
</div>

@section HeadScript{

}

<div id="divGrid">
    @Html.Partial("_GridView")
</div>

@*<div id="confirmationDownload" class="bootstrap-growl alert alert-success" style="position: fixed; margin: 0px 0px 0px -125px; z-index: 9999; top: 20px; width: 250px; left: 50%; display:none;">
    <a class="close" onClick="btnDownloadClose_onClick()">×</a>Download berdasarkan ?
    <br /><br /><button type="button" class="btn btn-xs btn-warning" onClick="btnDownloadAct_onClick(0)">All page</button>
    &nbsp<button type="button" class="btn btn-xs btn-success" onClick="btnDownloadAct_onClick(1)">Per page</button>
</div>*@

<div id="uploadDataFilePopup" class="modal fade" role="dialog" aria-hidden="true" aria-labelledby="basicModal">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="popup-title">Upload Area</h4>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <!-- Dropzone AREA-->
                        <div id="actions" class="row">
                            <div class="col-md-12 fileinput-button mb-2">
                                <div class="row justify-content-center" style="padding: 5px;">
                                    <i class="fa fa-cloud-upload-alt fa-5x" style="opacity: 0.3"></i>
                                </div>
                                <div class="row justify-content-center" style="padding: 5px;">
                                    <span style="color: #999; font-size: 20px;"><i class="fa fa-caret-right blue" style="opacity: 0.7"></i> Drop file to upload <small>(or click)</small> </span>
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="table table-striped" id="previews">
                                <div id="template" class="file-row">
                                    <div>
                                        <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                                            <div class="progress-bar progress-bar-striped progress-bar-animated bg-info" style="width:0%;" data-dz-uploadprogress><span class="progress-text"></span></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Dropzone AREA-->
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <div class="text-left">

                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <div class="text-right">
                        <button type="button" class="btn btn-info" id="linkDownloadTemplate">Download Template </button>
                        <button type="button" id="btnUploadPopupClose" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@*<div id="divPreviewExcel">
        @Html.Partial("_ModalPreviewExcelUpload")
    </div>*@

@section BodyScript{

    <script type="text/javascript" src="@Url.Content("~/Content/js/jquery.blockUI.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/common.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/jquery-msgbox/jquery.msgBox.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/tdk/jquery.filedownload.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/tdk/jquery.bootstrap-growl.min.js")"></script>

    <script type="text/javascript" src="@Url.Content("~/Content/Bootstrap/js/date-time/bootstrap-datepicker.js")"></script>

    <script>

        var trBaseColor;
        var dataEditCopy = [];
        var gScreenMode = "";
        var gDestCdList = [];

    $(document).ready(function () {

        var previewNode = document.querySelector("#template");
        previewNode.id = "";
        var previewTemplate = previewNode.parentNode.innerHTML;
        previewNode.parentNode.removeChild(previewNode);

        var myDropzone = new Dropzone("#actions", {
            url: "@Html.Toyota().Page.GetActionUrl("UploadDataFile")",
            paramName: "file",
            maxFiles: 1,
            acceptedFiles: ".xls",
            addRemoveLinks: false,
            previewTemplate: previewTemplate,
            autoQueue: true,
            clickable: ".fileinput-button",
            uploadprogress: function (file, progress, bytesSent) {
                if (file.previewElement) {
                    var progressElement = file.previewElement.querySelector("[data-dz-uploadprogress]");
                    progressElement.style.width = progress + "%";
                    progressElement.querySelector(".progress-text").textContent = Math.round(progress) + "%";
                }
            },
            success: function (file, returnResult) {
                onUploadDataFileSuccess(returnResult);
            },
            complete: function () {

            },
            error: function (file, errormessage) {
                if (file.previewElement) {
                    showErrorMesgGrowl(errormessage);
                }
            },
        });

        myDropzone.on("complete", function (file) {
            myDropzone.removeFile(file);
        });

        $(document).one('ajaxloadstart.page', function (e) {
            try {
                myDropzone.destroy();
            } catch (e) { }
        });

        $(document).on("click", "#btnUpload", function () {
            gScreenMode = "Upload";
            $("#uploadDataFilePopup").modal();
        });

        $(document).on("click", "#insertLine", function () {
            gScreenMode = "Add";
            addTheFirstRow(this);
            dataEditCopy.length = 0;
        });

        $(document).on("click", "#cancelSubmit", function () {
            var tr = $(this).closest("tr");
            var tcFrom = $("#sc_TC_From").val();
            var tcTo = $("#sc_TC_To").val();
            var createdDt = $("#sc_Created_Dt").val();
            $("#tblDetail tbody tr").css("opacity", "1");
            $(".initialBtn").prop("disabled", false);
            if (tr.attr("class") == "editLine") {
                tr.each(function (i, e) {
                    $(e).removeClass($(e).attr("class"));
                    $(e).css("background-color", trBaseColor);
                    var i = $(e).children('td');
                    for (var x = 2; x <= i.length; x++) {
                        var val = i.eq(x).children().val();
                        i.eq(x).html(val);
                    }
                    i.eq(1).html(initialButton);

                    i.eq(10).html(tcFrom);
                    i.eq(11).html(tcTo);
                    i.eq(13).html(createdDt);
                });
            } else {
                $(this).closest("tr").remove();
            }
            doSearch(1);
        });

        $(document).on("click", "#editLine", function () {
            gScreenMode = 'Edit'
            dataEditCopy.length = 0;
            var tr = initializeEditCopyLine(this);
            tr.addClass($(this).attr("id"));
            loopThrougTableRow(tr, $(this).attr('id'));
            $("#txtEq2").prop('disabled', true);
            $("#txtEq12").prop('disabled', true);
            $("#txtEq13").prop('disabled', true);
            $("#txtEq3").prop('disabled', true);
            $("#txtPartNoOne").prop('disabled', true);
            $("#txtPartNoTwo").prop('disabled', true);
            $("#txtPartNoThree").prop('disabled', true);
            trBaseColor = getComputedStyle(document.querySelector("." + $(this).attr('id') + "")).backgroundColor;
            tr.css("background-color", "#E9E9E9");

        });

        $(document).on("click", "#copyLine", function () {
            gScreenMode = 'Add'
            dataEditCopy.length = 0;
            addTheFirstRow(this);
        });

        $(document).on("click", "#btnDelDtl", function () {
            var checked = $(".grid-checkbox-body").length;

            if (checked < 1) {
                showErrorMesgGrowl("Choose one or more data(s) to be delete!");
            }
            else {
                //showConfirmMesg("Are you sure you want to delete the record?", onConfirmDelete, "Delete Confirmation");
                $.messagebox.show(
                "Delete Data",
                "MCSTSTD014C: Are you sure you want to delete the record ?",
                "INF",
                "CONFIRM",
                "onConfirmDelete()",
                ""
            );
                //$("#deleteConfirmation").modal();
            }
        });

        $(document).on("click", "#btnSave", function () {
            $.messagebox.show(
                "Save Data",
                "MCSTSTD014C: Are you sure you want to save the record ?",
                "INF",
                "CONFIRM",
                "onConfirmSave()",
                ""
            );

        });

        $(document).on("click", "#linkDownloadTemplate", function () {
            popUpProgressShow();
            $.fileDownload('@Url.Content("~/DeliveryPackingPartsNoM_PxP/DownloadTemplate")', {
                httpMethod: "POST",
                data: {},
                successCallback: function (url) {
                    popUpProgressHide();
                },
                failCallback: function (responseHtml, url) {
                    popUpProgressHide();
                    var returnResult = JSON.parse(responseHtml.replace("<pre>", "").replace("</pre>", ""));
                    handleAjaxResultGrowl(returnResult, "Download Template");
                }
            });
        });

        $(document).on('click', '#importExcel', function () {
            var params = new Object();
            var data = new Object();
            //var method = "IMPORT";
            params.ScreenMode = gScreenMode;
            params.data = data;
            var i = 1;
            data.DPPartsNoM_PxPCollection = []

            $('#tblPreview tbody tr').each(function () {
                var dtl = new Object();
                dtl.DEST_CD = $(this).find('input#Destination_Code_' + i).val();
                dtl.CFC = $(this).find('input#CFC_' + i).val();
                dtl.PART_NO = $(this).find('input#Part_No_' + i).val();
                dtl.STATUS_CD = $(this).find('input#Status_Code_' + i).val();
                dtl.PROCESS_CD = $(this).find('input#Process_Code_' + i).val();
                dtl.PART_NAME = $(this).find('input#Part_Name_' + i).val();
                dtl.LOT_SIZE = $(this).find('input#LOT_Size_' + i).val();
                dtl.SEL_MATCH_RATIO = $(this).find('input#Sel_Match_Ratio_' + i).val();
                dtl.TC_FROM = $(this).find('input#TC_From_' + i).val();
                dtl.TC_TO = $(this).find('input#TC_To_' + i).val();



                data.DPPartsNoM_PxPCollection.push(dtl);
                i++;
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Content("DeliveryPackingPartsNoM_PxP/AddEditSave")',
                contentType: 'application/json',
                dataType: "json",
                traditional: true,
                data: JSON.stringify(params),
                beforeSend: function () {
                    popUpProgressShow();
                    console.log(params);
                },
                success: function (data) {
                    if (data.Result == "ERROR") {
                        showErrorMesgGrowl(data.ErrMesgs);
                        $("#previewUploadExcel").modal("hide");
                        doSearch(1);
                    }
                    else {
                        showSuccessMesgGrowl("Save Success");
                        onSaveSuccess();
                    }
                    popUpProgressHide();
                },
                error: function (data) {
                    popUpProgressHide();
                    showErrorMesgGrowl(data.ErrMesgs);
                },
                complete: function () {
                    popUpProgressHide();
                }
            });
        });

    })
        function onConfirmSave(){

               var params = new Object();
            var datas = new Object();

            var one = $("#txtPartNoOne").val();

            var two = $("#txtPartNoTwo").val();

            var three = $("#txtPartNoThree").val();

            var PART_NO = one + two + three;
            params.ScreenMode = gScreenMode;
            params.data = datas;
            var errorinf = 0;

            if (gScreenMode === 'Add') {
                //ADD
                datas.DEST_CD = $("#txtEq2 ").val();
                datas.CFC = $("#txtEq3").val();
                datas.PART_NO = PART_NO;
                datas.PART_NO_ONE = $("#txtPartNoOne").val();
                datas.PART_NO_TWO = $("#txtPartNoTwo").val();
                datas.PART_NO_THREE = $("#txtPartNoThree").val();
                datas.STATUS_CD = $("#txtEq5").val();
                datas.PROCESS_CD = $("#txtEq6").val();
                datas.PART_NAME = $("#txtEq7").val();
                datas.LOT_SIZE = $("#txtEq8").val();
                datas.SEL_MATCH_RATIO = $("#txtEq9").val();
                datas.TC_FROM = $("#sc_TC_From").val();
                datas.TC_TO = $("#sc_TC_To").val();

                //validasi
                if (datas.DEST_CD == '' || datas.DEST_CD == null) {
                    showErrorMesgGrowl("DESTINATION CODE should not be empty");
                    errorinf = 1;
                } else if (datas.CFC == '' || datas.CFC == null) {
                    showErrorMesgGrowl("CAR FAMILY CODE should not be empty");
                    errorinf = 1;
                }
                else if (datas.PART_NO_ONE == '' || datas.PART_NO_ONE == null) {
                    showErrorMesgGrowl("PART NO in COLOUMN ONE should not be empty");
                    errorinf = 1;
                }
                else if (datas.PART_NO_TWO == '' || datas.PART_NO_TWO == null) {
                    showErrorMesgGrowl("PART NO in COLOUMN TWO should not be empty");
                    errorinf = 1;
                }
                else if (datas.PART_NO_THREE == '' || datas.PART_NO_THREE == null) {
                    showErrorMesgGrowl("CAR FAMILY CODE should not be empty");
                    errorinf = 1;

                } else if (datas.STATUS_CD == '' || datas.STATUS_CD == null) {
                    showErrorMesgGrowl("STATUS CODE should not be empty");
                    errorinf = 1;
                } else if (datas.PROCESS_CD == '' || datas.PROCESS_CD == null) {
                    showErrorMesgGrowl("PROCESS CODE should not be empty");
                    errorinf = 1;

                }
                else if (datas.PROCESS_CD != 'M' && datas.PROCESS_CD != 'K') {
                    showErrorMesgGrowl("PROCESS CODE ONLY M or K");
                    errorinf = 1;

                }

                else if (datas.PART_NAME == '' || datas.PART_NAME == null) {
                    showErrorMesgGrowl("PART NAME  not be empty");
                    errorinf = 1;
                } else if (datas.TC_FROM == '' || datas.TC_FROM == null) {
                    showErrorMesgGrowl("TC FROM should not be empty");
                    errorinf = 1;
                } else if ($("#sc_TC_From").val() > $("#sc_TC_From").val()) {
                    showErrorMesgGrowl("TC From must be larger than TC To");
                    errorinf = 1;
                }

            }
            else {
                datas.DEST_CD = $("#txtEq2").val();
                datas.CFC = $("#txtEq3").val();
                datas.PART_NO = PART_NO;
                datas.PART_NO_ONE = $("#txtPartNoOne").val();
                datas.PART_NO_TWO = $("#txtPartNoTwo").val();
                datas.PART_NO_THREE = $("#txtPartNoThree").val();
                datas.STATUS_CD = $("#txtEq5").val();
                datas.PROCESS_CD = $("#txtEq6").val();
                datas.PART_NAME = $("#txtEq7").val();
                datas.LOT_SIZE = $("#txtEq8").val();
                datas.SEL_MATCH_RATIO = $("#txtEq9").val();
                datas.TC_FROM = $("#sc_TC_From").val();
                datas.TC_TO = $("#sc_TC_To").val();
                //validasi
                if (datas.DEST_CD == '' || datas.DEST_CD == null) {
                    showErrorMesgGrowl("DESTINATION CODE should not be empty");
                    errorinf = 1;
                } else if (datas.CFC == '' || datas.CFC == null) {
                    showErrorMesgGrowl("CAR FAMILY CODE should not be empty");
                    errorinf = 1;
                }
                else if (datas.PART_NO_ONE == '' || datas.PART_NO_ONE == null) {
                    showErrorMesgGrowl("PART NO in COLOUMN ONE should not be empty");
                    errorinf = 1;
                }
                else if (datas.PART_NO_TWO == '' || datas.PART_NO_TWO == null) {
                    showErrorMesgGrowl("PART NO in COLOUMN TWO should not be empty");
                    errorinf = 1;
                }
                else if (datas.PART_NO_THREE == '' || datas.PART_NO_THREE == null) {
                    showErrorMesgGrowl("CAR FAMILY CODE should not be empty");
                    errorinf = 1;

                } else if (datas.STATUS_CD == '' || datas.STATUS_CD == null) {
                    showErrorMesgGrowl("STATUS CODE should not be empty");
                    errorinf = 1;
                } else if (datas.PROCESS_CD == '' || datas.PROCESS_CD == null) {
                    showErrorMesgGrowl("PROCESS CODE should not be empty");
                    errorinf = 1;

                }
                else if (datas.PROCESS_CD != 'M' && datas.PROCESS_CD != 'K') {
                    showErrorMesgGrowl("PROCESS CODE ONLY M or K");
                    errorinf = 1;

                }
                else if (datas.PART_NAME == '' || datas.PART_NAME == null) {
                    showErrorMesgGrowl("PART NAME  not be empty");
                    errorinf = 1;
                } else if (datas.TC_FROM == '' || datas.TC_FROM == null) {
                    showErrorMesgGrowl("TC FROM should not be empty");
                    errorinf = 1;
                } else if ($("#sc_TC_From").val() > $("#sc_TC_From").val()) {
                    showErrorMesgGrowl("TC From must be larger than TC To");
                    errorinf = 1;
                }
            }

            if (errorinf == 1) {

            }
            else {
               $.ajax({
                    type: 'POST',
                    url: '@Url.Content("DeliveryPackingPartsNoM_PxP/AddEditSave")',
                    contentType: 'application/json',
                    dataType: "json",
                    traditional: true,
                    data: JSON.stringify(params),
                    beforeSend: function () {
                        popUpProgressShow();
                        console.log(params);
                    },
                    success: function (data) {
                         if (data.Result == "ERROR") {
                             showErrorMesgGrowl(data.ErrMesgs);
                         }
                         else {
                             showSuccessMesgGrowl("Save Success");
                             onSaveSuccess();
                            }
                        popUpProgressHide();
                    },
                    error: function (data) {
                        popUpProgressHide();
                        showErrorMesgGrowl(data.ErrMesgs);
                    },
                    complete: function () {
                        popUpProgressHide();
                    }
                });
            }
<<<<<<< Updated upstream

        });

        $(document).on("click", "#linkDownloadTemplate", function () {
            popUpProgressShow();
            $.fileDownload('@Url.Content("~/DeliveryPackingPartsNoM_PxP/DownloadTemplate")', {
                httpMethod: "POST",
                data: {},
                successCallback: function (url) {
                    popUpProgressHide();
                },
                failCallback: function (responseHtml, url) {
                    popUpProgressHide();
                    var returnResult = JSON.parse(responseHtml.replace("<pre>", "").replace("</pre>", ""));
                    handleAjaxResultGrowl(returnResult, "Download Template");
                }
            });
        });

        $(document).on('click', '#importExcel', function () {
            var params = new Object();
            var data = new Object();
            //var method = "IMPORT";
            params.ScreenMode = gScreenMode;
            params.data = data;
            var i = 1;
            data.DPPartsNoM_PxPCollection = []

            $('#tblPreview tbody tr').each(function () {
                var dtl = new Object();
                dtl.DEST_CD = $(this).find('input#Destination_Code_' + i).val();
                dtl.CFC = $(this).find('input#CFC_' + i).val();
                dtl.PART_NO = $(this).find('input#Part_No_' + i).val();
                dtl.STATUS_CD = $(this).find('input#Status_Code_' + i).val();
                dtl.PROCESS_CD = $(this).find('input#Process_Code_' + i).val();
                dtl.PART_NAME = $(this).find('input#Part_Name_' + i).val();
                dtl.LOT_SIZE = $(this).find('input#LOT_Size_' + i).val();
                dtl.SEL_MATCH_RATIO = $(this).find('input#Sel_Match_Ratio_' + i).val();
                dtl.TC_FROM = $(this).find('input#TC_From_' + i).val();
                dtl.TC_TO = $(this).find('input#TC_To_' + i).val();



                data.DPPartsNoM_PxPCollection.push(dtl);
                i++;
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Content("DeliveryPackingPartsNoM_PxP/AddEditSave")',
                contentType: 'application/json',
                dataType: "json",
                traditional: true,
                data: JSON.stringify(params),
                beforeSend: function () {
                    popUpProgressShow();
                    console.log(params);
                },
                success: function (data) {
                    console.log(data.ErrMesgs);
                    if (data.ErrMesgs != null) {
                        for (var i = 0; i < data.ErrMesgs.length; i++) {
                            if (data.ErrMesgs[i] != null) {
                                showErrorMesgGrowl(data.ErrMesgs[i]);
                            }
                        }
                        $("#previewUploadExcel").modal("hide");
                        doSearch(1);
                    } else {
                        showSuccessMesgGrowl("Save Success");
                        onSaveSuccess();
                    }
                    popUpProgressHide();
                },
                error: function (data) {
                    popUpProgressHide();
                    showErrorMesgGrowl(data.ErrMesgs);
                },
                complete: function () {
                    popUpProgressHide();
                }
            });
        });

    })

=======
        }
        
>>>>>>> Stashed changes
    function datePicker() {
        $( "._datepicker" ).datepicker({
            format: 'ddmmyyyy',
            autoclose: true,
            minViewMode: 'date',
            orientation: 'auto bottom'
        }).on('show', function () {
            $(".datepicker-orient-bottom").removeClass("datepicker-orient-bottom");
            $(".datepicker-dropdown").addClass("datepicker-orient-top");
        });
    }


    function addTheFirstRow(e) {
        btnAddRow_onClick(e);
        $(".initialBtn").prop("disabled", true);
        $("input[type=checkbox]").prop("checked", false);
    }

    function btnAddRow_onClick(classAttr) {
        var $class = $(classAttr).attr('id');
        var tr = $class == 'insertLine' ? $("#tblDetail tbody tr:first") : $(classAttr).closest("tr");
        $(".tableScroll").scrollTop(0);
        $(".customTable tr, .customTable tbody td.stickyColumn").css("background", "#fff");

        tr.clone().addClass($class).css("background-color", "#E9E9E9").prependTo("#tblDetail tbody");
        $("#tblDetail tbody tr." + $class).find("td.stickyColumn").css("background-color", "#E9E9E9");


        loopThrougTableRow($("#tblDetail tbody tr." + $class + ""), $class);
    }

    function initializeEditCopyLine(e) {
        var tr = $(e).closest("tr");
        $("input[type=checkbox]").prop("checked", false);
        $(".initialBtn").prop("disabled", true);

        return tr;
    }

    function loopThrougTableRow(tr, classAttr) {
        tr.each(function (i, e) {
            var i = $(e).children('td');
            for (var x = 2; x < i.length; x++) {
                var val = classAttr == "insertLine" ? "" : i.eq(x).text();
                i.eq(x).html("<input type ='text' class='form-control " + x + " text-center' value='" + val + "' id='txtEq" + x + "'/>");

                if (x == 4) {
                    i.eq(4).html(txtPartNo(val));
                }

                if (x == 11) {
                    i.eq(11).html(tdTcTo(val));
                }
                if (x == 10) {
                    i.eq(10).html(tdTcFrom(val));
                }

                if (x == 13) {
                    i.eq(13).html(tdCreatedDt(val));
                }
                dataEditCopy.push(val);
            }
            i.eq(1).html(modifiedButton);

            datePicker();
        });

        $("#sc_Created_Dt").prop('disabled', true);
        $("#txtEq12").prop('disabled', true);
        $("#tblDetail tbody tr:not(." + tr.attr("class") + ")").css("opacity", "0.3");

        for (var i = 0; i < gDestCdList.length; i++) {

            $('#cmbDsCd').append($("<option/>", {
                value: gDestCdList[i].DEST_CD,
                text: gDestCdList[i].DEST_CD
            }));

        }
    }

        function txtPartNo(val) {



            var a = val.substring(0, 5);
            var b = val.substring(6, 11);
            var c = val.substring(12, 14);

            var string = `
            <div class="input-group">
                <input id="txtPartNoOne" style="width: 200px;" maxlength="5" class="form-control  _add _edit" type="text" data-name="PART_NO_ONE" data-enabled="ADD EDIT" data-mandatory="ADD" value="` + a + `" />
                <strong class="ml-1"><b>-</b></strong>
                <input id="txtPartNoTwo" style="width: 80px;" maxlength="5" class="form-control  _add _edit" type="text" data-name="PART_NO_TWO" data-enabled="ADD EDIT" data-mandatory="ADD" value ='` +b+ `'/>
                <strong class="ml-1"><b>-</b></strong>
                <input id="txtPartNoThree" style="width: 40px;" maxlength="2" class="form-control  _add _edit" type="text" data-name="PART_NO_THREE" data-enabled="ADD EDIT" data-mandatory="ADD" value='`+c+`' />
             </div>
            `;

            return string
        }

        function tdTcTo(val) {
            var year = val.substring(0, 4);
            var month = val.substring(4, 6);
            var day = val.substring(6, 8);
            var v = day.toString() + month.toString() + year.toString();
            var string = `
             <div class="input-group">
                        <input class="form-control _datepicker" style="width:100px;" id="sc_TC_To" name="sc_TC_To" type="text" value="`+ v + `"/>
                        <div class="input-group-append">
                            <span class="input-group-text">
                                <i class="far fa-calendar-alt"></i>
                            </span>
                        </div>
                    </div>
            `;
            return string
        }
        function tdTcFrom(val) {

            var year = val.substring(0, 4);
            var month = val.substring(4, 6);
            var day = val.substring(6, 8);
            var v = day.toString() + month.toString() + year.toString();
            var string = `
             <div class="input-group">
                        <input class="form-control _datepicker"  style="width:100px;"  id="sc_TC_From" name="sc_TC_From" type="text" value="`+ v + `"/>
                        <div class="input-group-append">
                            <span class="input-group-text">
                                <i class="far fa-calendar-alt"></i>
                            </span>
                        </div>
                    </div>
            `;

            return string
        }

        function tdDesc(val) {
            var l = 0;


            var string = `
            <div class="input-group">
            <select class="form-control chosen-select _add _edit" id="cmbDsCd" >
            <option value="" selected ></option>
            </select>
        </div>
            `;
            for (var i = 0; i < gDestCdList.length; i++) {

                $('#cmbDsCd').append($("<option/>", {
                    value: gDestCdList[i].DEST_CD,
                    text: gDestCdList[i].DEST_CD
                }));

            }

            return string
        }

        function tdCreatedDt(val) {

            var string = `
             <div class="input-group">
                        <input class="form-control _datepicker"  style="width:100px;"  id="sc_Created_Dt" name="sc_Created_Dt" type="text" value="`+ val + `"/>
                        <div class="input-group-append">
                            <span class="input-group-text">
                                <i class="far fa-calendar-alt"></i>
                            </span>
                        </div>
                    </div>
            `;
            return string
        }

        @*function btnDownloadClose_onClick() {
	        $('#confirmationDownload').css('display', 'none');
	    }

	    function onDownload() {
	        $('#confirmationDownload').css('display', '');
	    }*@


       //function btnDownloadAct_onClick(flag) {
        function onDownload() {
            $.messagebox.show(
                "Download Data",
                "MCSTSTD014C: Are you sure you want to download the record ?",
                "INF",
                "CONFIRM",
                "onDownloadFile()",
                ""
            );
        }
        function onDownloadFile() {
             popUpProgressShow();
            //$.messagepanel.show("Download Success");
            $.fileDownload('@Url.Content("DeliveryPackingPartsNoM_PxP/DownloadFileExcel")', {
	                httpMethod: "POST",
	                data: {
                        DEST_CD: $("#txtSearchDestCd").val(),
                        CFC: $("#txtSearchCFC").val(),
	                    RowsPerPage: $("#cbodisplay").val(),
	                    CurrentPage: $(".pagination li.page-item.active a").text()//,
	                    //PageFlag: flag
	                },
                    successCallback: function (data) {
                        if (data == "ERROR") {
                            showErrorMesgGrowl(data);
                        }
                        else {
                            popUpProgressHide();
                            $('#confirmationDownload').css('display', 'none');
                            showSuccessMesgGrowl("Download Success");
                        }
	                },
	                failCallback: function (data) {
                        popUpProgressHide();
                        if (data == "ERROR") {
                            showErrorMesgGrowl("ERROR : Data not found");
                        }
                        else {
                            popUpProgressHide();
                            $('#confirmationDownload').css('display', 'none');
                            showSuccessMesgGrowl("Download Success");
                        }
                        $('#confirmationDownload').css('display', 'none');
	                    //var returnResult = JSON.parse(responseHtml.replace("<pre>", "")
                        //    .replace("</pre", ""));
                        //
	                    //handleAjaxResultGrowl(returnResult, "Download");
	                }

            });

        }

        function doSearch(page) {
            popUpProgressShow();

            var one = $("#txtSearchPartOne").val();

            var two = $("#txtSearchPartTwo").val();

            var three = $("#txtSearchPartThree").val();

            var PART_NO = one + two + three;
         $.ajax({
            type: "POST",
            url: "@Html.Toyota().Page.GetActionUrl("Search")",
            data: {
                DEST_CD: $("#txtSearchDestCd").val(),
                CFC: $("#txtSearchCFC").val(),
                PART_NO: PART_NO,
                PART_NO_ONE: one,
                PART_NO_TWO: two,
                PART_NO_THREE: three,
                rowsPerPage: $("#cbodisplay").val(),
                currentPage: page
            },
            success: function (data) {
                $("#divGrid").html(data);
                popUpProgressHide();
            },
            error: function (data) {
                popUpProgressHide();
            }
        });
        }

        function doClear() {
                $("#txtSearchDestCd").val(''),
                $("#txtSearchCFC").val(''),
                $("#txtSearchPartOne").val(''),
                $("#txtSearchPartTwo").val(''),
                $("#txtSearchPartThree").val(''),

            doSearch(1);
        }

        function onSaveSuccess() {

            doSearch(1);
            $(".initialBtn").prop("disabled", false);
            $("#previewUploadExcel").modal("hide");
        }

        @*delete multiple*@
        function onConfirmDelete() {
            popUpProgressShow();

            var DPPartsNoM_PxPCollection = [];
            var id = "";

            var data = new Object();
            data.DPPartsNoM_PxPCollection = [];

            $(".grid-checkbox-body:checked").each(function () {
                var Data1 = new Object();
                Data1.COMPANY_CD = $(this).attr('data-companyCd');
                Data1.DEST_CD = $(this).attr('data-destinationCd');
                Data1.PART_NO = $(this).attr('data-PartNo');

                data.DPPartsNoM_PxPCollection.push(Data1);
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Content("DeliveryPackingPartsNoM_PxP/Delete")',
                contentType: "application/json",
                dataType: "json",
                traditional: true,
                data: JSON.stringify(data),
                beforeSend: function () {
                    popUpProgressShow();
                },
                success: function (data) {
                    if (data.Result == "ERROR") {
                        showErrorMesgGrowl(data.ErrMesgs);
                    }
                    else {
                        showSuccessMesgGrowl("Delete Success");
                        doSearch(1);
                    }
                },
                error: function (data) {
                    showErrorMesgGrowl(data.ErrMesgs);
                },
                complete: function () {
                    popUpProgressHide();
                    $("#deleteConfirmation").modal("hide");
                }
            });
        }

        function onDeleteSingle(destinationCode, companyCd, partNo) {

            $.messagebox.show(
                "Delete Data",
                "MCSTSTD014C: Are you sure you want to delete the record ?",
                "INF",
                "CONFIRM",
                "onConfirmDeleteSingle(" + "'" + destinationCode + "'," + "'" + companyCd + "'," + "'" + partNo+"'"+ ")",
                ""
            );
        }

        function onConfirmDeleteSingle(destinationCode, companyCd, partNo) {
            popUpProgressShow();

            var listData = [];
            var id = "";

            var data = new Object();
            data.DPPartsNoM_PxPCollection = [];

            var Data1 = new Object();
            Data1.COMPANY_CD = companyCd ;
            Data1.DEST_CD = destinationCode ;
            Data1.PART_NO = partNo;

            data.DPPartsNoM_PxPCollection.push(Data1);
            /*
            $(".grid-checkbox-body:checked").each(function () {
                var Data1 = new Object();
                Data1.SOLD_TO_PARTY = $(this).attr('data-soldparty');
                Data1.SHIP_TO_PARTY = $(this).attr('data-shipparty');

                data.listData.push(Data1);
            });
            */

            $.ajax({
                type: 'POST',
                url: '@Url.Content("DeliveryPackingPartsNoM_PxP/Delete")',
                contentType: "application/json",
                dataType: "json",
                traditional: true,
                data: JSON.stringify(data),
                beforeSend: function () {
                    popUpProgressShow();
                },
                success: function (data) {
                    if (data.Result == "ERROR") {
                        showErrorMesgGrowl(data.ErrMesgs);
                    }
                    else {
                        showSuccessMesgGrowl("Delete Success");
                        popUpProgressHide();
                        doSearch(1);
                    }
                },
                error: function (data) {
                    showErrorMesgGrowl(data.ErrMesgs);
                },
                complete: function () {
                    popUpProgressHide();
                    $("#deleteConfirmation").modal("hide");
                }
            });
        }




    //Once the upload has completed
    //===================================================
    function onUploadDataFileSuccess(returnResult) {
        if (returnResult.ExceptionErrors != null || returnResult.ExceptionErrors != undefined) {
            showErrorMesgGrowl("<center>" + returnResult.ExceptionErrors[0] + "</center>");
        } else {
            if (returnResult.Params[0].length == 0) {
                showErrorMesgGrowl("You cant upload the template with empty data");
            } else {
                $("#importExcel").remove();
                $('#previewAlert').hide();
                $('#tblPreview tbody tr').remove();
                $('#uploadDataFilePopup').modal('hide');
                $('#btnEditUploaded').removeClass('saveEdit').text('Edit Upload');
                addDataToTableUploaded(true, returnResult);
            }
        }
    }

    function addDataToTableUploaded(bool, returnResult) {
        var obj = returnResult.Params[0];
        var index = 1; indexPrev = 1;
        if (returnResult.ErrMesgs >= 1 || returnResult.ErrMesgs != null || returnResult.ErrMesgs != undefined) {
            for (var i = 0; i < obj.length; i++) {
                addRowPreviewExcel(obj[i], returnResult.ErrMesgs);
                index++
            }
            var countEmptyField = checkIfEmpty(returnResult.ErrMesgs);
            showErrorMesgGrowl("Upload is succeeded with several blank fields");
            $('#previewAlert').show();
            $('strong#countEmpty').text(countEmptyField.length);
            $("#previewUploadExcel").modal("show");
            $('.modal-title').text('Preview Excel Upload');
            $('#divPreviewExcel input, #divPreviewExcel select').prop('disabled', true);
            editSaveUpload(returnResult.ErrMesgs);
        } else {
            //Change it to yours
            var params = new Object();
            var data = new Object();

            params.ScreenMode = gScreenMode;
            params.data = data;
            //var url = '@Url.Content("DeliveryPackingPartsNoM_PxP/AddEditSave")';
            data.DPPartsNoM_PxPCollection = []
            for (var i = 0; i < obj.length; i++) {
                var dtl = new Object();
                dtl.DEST_CD = obj[i].DEST_CD;
                dtl.CFC = obj[i].CFC;
                dtl.PART_NO = obj[i].PART_NO;
                dtl.STATUS_CD = obj[i].STATUS_CD;
                dtl.PROCESS_CD = obj[i].PROCESS_CD;
                dtl.LOT_SIZE = obj[i].LOT_SIZE;
                dtl.SEL_MATCH_RATIO = obj[i].SEL_MATCH_RATIO;
                dtl.PART_NAME = obj[i].PART_NAME;
                dtl.TC_FROM = obj[i].TC_FROM;
                dtl.TC_TO = obj[i].TC_TO;

                dtl.SEQ_NO = '';

                data.DPPartsNoM_PxPCollection.push(dtl);
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Content("DeliveryPackingPartsNoM_PxP/AddEditSave")',
                contentType: 'application/json',
                dataType: "json",
                traditional: true,
                data: JSON.stringify(params),
                beforeSend: function () {
                    popUpProgressShow();
                    console.log(params);
                },
                success: function (data) {
                    if (data.ErrMesgs != null) {
                        for (var i = 0; i < data.ErrMesgs.length; i++) {
                            if (data.ErrMesgs[i] != null) {
                                showErrorMesgGrowl(data.ErrMesgs[i]);
                            }
                        }
                        $("#previewUploadExcel").modal("hide");
                        doSearch(1);
                    } else {
                        showSuccessMesgGrowl("Save Success");
                        onSaveSuccess();
                    }
                    popUpProgressHide();
                },
                error: function (data) {
                    popUpProgressHide();
                    showErrorMesgGrowl(data.ErrMesgs);
                },
                complete: function () {
                    popUpProgressHide();
                }
            });
            //Change it to yours
        }
    }

    function editSaveUpload(errMsg) {
        $(document).on('click', '#btnEditUploaded', function () {
            $(this).addClass('saveEdit').text('Save');
            $('#divPreviewExcel input, #divPreviewExcel select').prop('disabled', false);
            $('#importExcel').remove();
        })

        $(document).on('click', '.saveEdit', function () {
            $(this).removeClass('saveEdit').text('Edit Upload');
            $('#divPreviewExcel input, #divPreviewExcel select').prop('disabled', true);
            var countEmpty = checkIfEmpty(errMsg);
            if (countEmpty.length == 0) {
                console.log(countEmpty.length);
                $("#divPreviewExcel .text-right").append('<button type="button" class="btn btn-info btn-md" id="importExcel">Import </button>');
            } else {
                $("#importExcel").remove();
            }
        });
    }

    function addRowPreviewExcel(object, errMsg) {
        $('#tblPreview tbody').append(
           '<tr class="' + indexPrev + '">\
                <td>'+ indexPrev +'</td>\
                <td>\
                    <input type="text" class="form-control input-sm" id="Destination_Code_' + indexPrev + '"\
                        value="' + (object.DEST_CD == null ? "" : object.DEST_CD) + '">\
                </td>\
                <td>\
                    <input type="text" class="form-control input-sm" id="CFC_' + indexPrev + '"\
                        value="' + (object.CFC == null ? "" : object.CFC) + '">\
                </td>\
                <td>\
                    <input type="text" class="form-control input-sm" id="Part_No_' + indexPrev + '"\
                        value="' + (object.PART_NO == null ? "" : object.PART_NO) + '">\
                </td>\
                <td>\
                    <input type="text" class="form-control input-sm" id="Status_Code_' + indexPrev + '"\
                        value="' + (object.STATUS_CD == null ? "" : object.STATUS_CD) + '">\
                </td>\
                <td>\
                    <input type="text" class="form-control input-sm" id="Process_Code_' + indexPrev + '"\
                        value="' + (object.PROCESS_CD == null ? "" : object.PROCESS_CD) + '">\
                </td>\
                <td>\
                    <input type="text" class="form-control input-sm" id="Part_Name_' + indexPrev + '"\
                        value="' + (object.PART_NAME == null ? "" : object.PART_NAME) + '">\
                </td>\
                 <td>\
                    <input type="text" class="form-control input-sm" id="LOT_Size_' + indexPrev + '"\
                        value="' + (object.LOT_SIZE == null ? "" : object.LOT_SIZE) + '">\
                </td>\
                 <td>\
                    <input type="text" class="form-control input-sm" id="Sel_Match_Ratio_' + indexPrev + '"\
                        value="' + (object.SEL_MATCH_RATIO == null ? "" : object.SEL_MATCH_RATIO) + '">\
                </td>\
                <td>\
                   <input type="text" class="form-control input-sm _datepicker" id="TC_From_' + indexPrev + '"\
                    value="' + (object.TC_FROM == null ? "" : object.TC_FROM) + '">\
                </td>\
                <td>\
                   <input type="text" class="form-control input-sm _datepicker" id="TC_To_' + indexPrev + '"\
                    value="' + (object.TC_TO == null ? "" : object.TC_TO) + '">\
                </td>\
                <td hidden>\
                   <label class="hidden" id="Seq_No_' + indexPrev + '"\
                    value="' + (object.SEQ_NO == null ? "" : object.SEQ_NO) + '">\
                </td>\
            </tr>'
        );
        datePicker();
        clearOnPreviewEvent(indexPrev, errMsg);
        indexPrev++;
    }

    function clearOnPreviewEvent(i, errMsg) {
        $(document).on("change",
              "#Destination_Code_" + i
              + ",#CFC_" + i
              + ",#Part_No_" + i
              + ",#Status_Code_" + i
              + ",#Process_Code_" + i
              + ",#Sel_Match_Ratio_" + i
              + ",#Part_Name_" + i
              + ",#LOT_Size_" + i
           + ",#TC_From_" + i
           + ",#TC_To_" + i, function () {
               clearOnEvent(this, errMsg);
        });
    }

    function clearOnEvent(element, errMsg) {
        var id = $(element).attr('id');
        var lastChar = "";
            $(element).removeClass("emptyField mandatory");
            if ($(element).parent().hasClass("customTooltip")) {
                $(element).unwrap();
            }
        var countEmptyPreview = checkIfEmpty(errMsg);
        $('strong#countEmpty').text(countEmptyPreview.length);
        if (countEmptyPreview.length == 0) {
            $("#previewAlert").hide();
        } else {
            $("#previewAlert").show();
        }
    }


    function checkIfEmpty(errMsg) {
        var countEmptyField = [];
        $(".customToolTipText").remove();
        $("#divPreviewExcel input.form-control, #divPreviewExcel select").each(function () {
            if ($(this).val() == "" || $(this).val() == null) {
                    if ($(this).parent().hasClass("customTooltip")) {
                        $(this).unwrap();
                    }
                    $(this).wrapAll("<div class='customTooltip'></div>")
                    $(this).addClass("mandatory");
                    $(this).after("<span class='customToolTipText'><small class='errorMsg'>Cell is empty</small><i></i></span>");
                    $(this).closest('tr').attr('id','hasEmptyCells');
                    countEmptyField.push(1);
            }
        });
        if (errMsg != null) {
            for (var j = 0; j < errMsg.length; j++) {
                var str1 = errMsg[j].slice(0, errMsg[j].indexOf(" ")) + "_";
                var str2 = errMsg[j].slice(errMsg[j].indexOf("Row") + 4, errMsg[j].indexOf("Row") + 6);
                var id = str1.concat(str2);
                if ($("#" + id).parent().hasClass("customTooltip")) {
                    $("#" + id).next(".customToolTipText").find('.errorMsg').addClass(id);
                    $(".errorMsg." + id).text(errMsg[j]);
                }
            }
        }
        $('#tblPreview tbody tr').each(function () {
            if ($(this).attr('id') != 'hasEmptyCells') {
                //$(this).hide();
            }
        });
        return countEmptyField;
    }
    //===================================================

    </script>
}