@using System;
@using Toyota.Common.Web.Platform;
@using GPPSU.Controllers;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("_SearchCriteria")

@section HeadScript{

}

<div id="divGrid">
    @Html.Partial("_GridView")
</div>

<!--UPLOAD AREA-->
<div id="uploadDataFilePopup" class="modal fade" role="dialog" aria-hidden="true" aria-labelledby="basicModal">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="popup-title">Upload Area</h4>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <!-- Dropzone AREA-->
                        <div id="actions" class="row">
                            <div class="col-md-12 fileinput-button mb-2">
                                <div class="row justify-content-center" style="padding: 5px;">
                                    <i class="fa fa-cloud-upload-alt fa-5x" style="opacity: 0.3"></i>
                                </div>
                                <div class="row justify-content-center" style="padding: 5px;">
                                    <span style="color: #999; font-size: 20px;"><i class="fa fa-caret-right blue" style="opacity: 0.7"></i> Drop file to upload <small>(or click)</small> </span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="table table-striped" id="previews">
                                <div id="template" class="file-row">
                                    <div>
                                        <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                                            <div class="progress-bar progress-bar-striped progress-bar-animated bg-info" style="width:0%;" data-dz-uploadprogress><span class="progress-text"></span></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Dropzone AREA-->
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <div class="text-left">

                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <div class="text-right">
                        <button type="button" class="btn btn-info" id="linkDownloadTemplate">Download Template </button>
                        <button type="button" id="btnUploadPopupClose" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--UPLOAD AREA END-->

<div id="divPreviewExcel">
    @Html.Partial("_ModalPreviewExcelUpload")
</div>


@section BodyScript{

    <script type="text/javascript" src="@Url.Content("~/Content/js/jquery.blockUI.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/common.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/jquery-msgbox/jquery.msgBox.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/tdk/jquery.filedownload.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/tdk/jquery.bootstrap-growl.min.js")"></script>

    <script type="text/javascript" src="@Url.Content("~/Content/Bootstrap/js/date-time/bootstrap-datepicker.js")"></script>

    <script>

    var gScreenMode = "";

    var initialEqDateFrom = `
            01012021
        `;
   

    var trBaseColor;
    var dataEditCopy = [];
    $(document).ready(function () {

        var previewNode = document.querySelector("#template");
        previewNode.id = "";
        var previewTemplate = previewNode.parentNode.innerHTML;
        previewNode.parentNode.removeChild(previewNode);

        var myDropzone = new Dropzone("#actions", {
            url: "@Html.Toyota().Page.GetActionUrl("UploadDataFile")",
            paramName: "file",
            maxFiles: 1,
            acceptedFiles: ".xls",
            addRemoveLinks: false,
            previewTemplate: previewTemplate,
            autoQueue: true,
            clickable: ".fileinput-button",
            uploadprogress: function (file, progress, bytesSent) {
                if (file.previewElement) {
                    var progressElement = file.previewElement.querySelector("[data-dz-uploadprogress]");
                    progressElement.style.width = progress + "%";
                    progressElement.querySelector(".progress-text").textContent = Math.round(progress) + "%";
                }
            },
             success: function (file, returnResult) {
                onUploadDataFileSuccess(returnResult);
            },
            complete: function () {

            },
            error: function (file, errormessage) {
                if (file.previewElement) {
                    showErrorMesgGrowl(errormessage);
                }
            },
        });

        $(document).on("click", "#btnUpload", function () {
            gScreenMode = "Upload";
            $("#uploadDataFilePopup").modal();
        });

        $(document).on("click", "#insertLine", function () {
            gScreenMode = "Add";
            addTheFirstRow(this);
            dataEditCopy.length = 0;
             $( "._datepicker" ).datepicker({
                format: 'yyyy/mm/dd',
                autoclose: true,
                minViewMode: 'date'
            });

        });

        myDropzone.on("complete", function (file) {
            myDropzone.removeFile(file);
        });

        $(document).one('ajaxloadstart.page', function (e) {
            try {
                myDropzone.destroy();
            } catch (e) { }
        });

        $(document).on("click", "#btnSave", function () {

            var result;

            var tcFrom = $("#txtTC_FROM").val();
            var tcTo = $("#txtTC_TO").val();

            var tr = $(this).closest("tr");
            //$("#tblDetail tbody tr").css("opacity", "1");
            //$(".initialBtn").prop("disabled", false);
            if (tr.attr("class") == "editLine") {
                result = onSave(gScreenMode);
                if (result == true) {
                    $("#tblDetail tbody tr").css("opacity", "1");
                    $(".initialBtn").prop("disabled", false);
                    tr.each(function (i, e) {
                        $(e).removeClass($(e).attr("class"));
                        $(e).css("background-color", trBaseColor);
                        var i = $(e).children('td');
                        for (var x = 2; x <= i.length; x++) {
                            var val = i.eq(x).children().val();
                            i.eq(x).html(val);
                        }
                        i.eq(1).html(initialButton);
                        i.eq(5).html(tcFrom);
                        i.eq(6).html(tcTo);

                    });
                    doSearch(1);
                }

            }
            else {
                result = onSave(gScreenMode);
                console.log(result);
                if (result == true) {
                    $("#tblDetail tbody tr").css("opacity", "1");
                    $(".initialBtn").prop("disabled", false);
                    $(this).closest("tr").remove();
                }

            }
            //onSave(gScreenMode);
        });

         $(document).on("click", "#linkDownloadTemplate", function () {
            popUpProgressShow();
            $.fileDownload('@Url.Content("~/LineMasterSettingsScreen/DownloadTemplate")', {
                httpMethod: "POST",
                data: {},
                successCallback: function (url) {
                    popUpProgressHide();
                },
                failCallback: function (responseHtml, url) {
                    popUpProgressHide();
                    var returnResult = JSON.parse(responseHtml.replace("<pre>", "").replace("</pre>", ""));
                    handleAjaxResultGrowl(returnResult, "Download Template");
                }
            });
        });



        $(document).on("click", "#cancelSubmit", function () {
            var tr = $(this).closest("tr");

            var tcFrom = $("#txtTC_FROM").val();
            var tcTo = $("#txtTC_TO").val();
            $("#tblDetail tbody tr").css("opacity", "1");
            $(".initialBtn").prop("disabled", false);
            if (tr.attr("class") == "editLine") {
                tr.each(function (i, e) {
                    $(e).removeClass($(e).attr("class"));
                    $(e).css("background-color", trBaseColor);
                    var i = $(e).children('td');
                    for (var x = 2; x <= i.length; x++) {
                        var val = i.eq(x).children().val();
                        i.eq(x).html(val);
                    }
                    i.eq(1).html(initialButton);
                    i.eq(5).html(tcFrom);
                    i.eq(6).html(tcTo);

                });
            } else {
                $(this).closest("tr").remove();
            }
        });

        $(document).on("click", "#editLine", function () {
            gScreenMode = "Edit";
            dataEditCopy.length = 0;
            var tr = initializeEditCopyLine(this);
            tr.addClass($(this).attr("id"));
            loopThrougTableRow(tr, $(this).attr('id'),"Edit");

            trBaseColor = getComputedStyle(document.querySelector("." + $(this).attr('id') + "")).backgroundColor;
            tr.css("background-color", "#E9E9E9");
             $( "._datepicker" ).datepicker({
                format: 'yyyy/mm/dd',
                autoclose: true,
                minViewMode: 'date'
            });

            
        });

        $(document).on("click", "#copyLine", function () {
            gScreenMode = "Add";
            dataEditCopy.length = 0;
            addTheFirstRow(this);
            $( "._datepicker" ).datepicker({
                format: 'yyyy/mm/dd',
                autoclose: true,
                minViewMode: 'date'
            });

            $('._datepicker').val('25112010');
        });

        $(document).on("click", "#btnDelDtl", function () {
            var checked = $(".grid-checkbox-body").length;

            if (checked < 1) {
                showErrorMesgGrowl("Choose one or more data(s) to be delete!");
            }
            else {
                //showConfirmMesg("Are you sure you want to delete the record?", onConfirmDelete, "Delete Confirmation");
                $.messagebox.show(
                    "Delete Data",
                    "MCSTSTD014C: Are you sure you want to delete the record ?",
                    "INF",
                    "CONFIRM",
                    "onConfirmDelete()",
                    ""
                );
                //$("#deleteConfirmation").modal();
            }
        });

        $(document).on('click', '#importExcel', function () {
            var params = new Object();
            var data = new Object();
            //var method = "IMPORT";
            params.ScreenMode = gScreenMode;
            params.data = data;
            var i = 1;
            data.listData = []

            $('#tblPreview tbody tr').each(function () {
                var dtl = new Object();
                dtl.COMPANY_CD = $(this).find('input#COMPANY_CD_' + i).val();
                dtl.LINE_CD = $(this).find('input#LINE_CD_' + i).val();
                dtl.SEQ_NO = $(this).find('input#SEQ_NO_' + i).val();
                dtl.TC_FROM = $(this).find('input#TC_FROM_' + i).val();
                dtl.TC_TO = $(this).find('input#TC_TO_' + i).val();
                dtl.LINE_NAME = $(this).find('input#LINE_NAME_' + i).val();
                dtl.PROCESS_CD = $(this).find('input#PROCESS_CD_' + i).val();

                //dtl.COMPANY_CD = $(this).find('#Company_Code_' + i).val();
                //dtl.COMPANY_CD = $("#Company_Code_"+ i).val();
                // dtl.SEQ_NO = $(this).find('#Seq_No_' + i).val();
                //dtl.SEQ_NO = $("#Seq_No_"+ i).val();

                data.listData.push(dtl);
                i++;
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Content("LineMasterSettingsScreen/SaveAddEdit")',
                contentType: 'application/json',
                dataType: "json",
                traditional: true,
                data: JSON.stringify(params),
                beforeSend: function () {
                    popUpProgressShow();
                    console.log(params);
                },
                success: function (data) {
                    if (data.ErrMesgs != null) {
                        for (var i = 0; i < data.ErrMesgs.length; i++) {
                            if (data.ErrMesgs[i] != null) {
                                showErrorMesgGrowl(data.ErrMesgs[i]);
                            }
                        }
                        doSearch(1);
                    } else {
                        showSuccessMesgGrowl("Save Success");
                        onSaveSuccess();
                    }
                    $("#previewUploadExcel").modal("hide");
                    popUpProgressHide();
                },
                error: function (data) {
                    popUpProgressHide();
                    showErrorMesgGrowl(data.ErrMesgs);
                },
                complete: function () {
                    popUpProgressHide();
                }
            });
        });
    })

    function datePicker() {
        $("._datepicker").datepicker({
            format: 'ddmmyyyy',
            autoclose: true,
            container: '#datePickerBox'
        });
    }


    // On Search Criteria

    function onClear() {
        $("#linecd").val('');
        $("#proccd").val('');

        doSearch(1);
    }

    function doSearch(page) {
        popUpProgressShow();
         $.ajax({
            type: "POST",
            url: "@Html.Toyota().Page.GetActionUrl("Search")",
            data: {
                PROCESS_CD : $("#proccd").val(),
                LINE_CD: $("#linecd").val(),
                rowsPerPage: $("#cbodisplay").val(),
                currentPage: page
            },
            success: function (data) {
                $("#divGrid").html(data);
                popUpProgressHide();
            },
            error: function (data) {
                popUpProgressHide();
            }
        });
    }


    // On Add/Edit/Copy

    function onSave(mode) {

        var result = true;

        var params = new Object();
        var datas = new Object();

        params.ScreenMode = gScreenMode;
        params.data = datas;
        var errorinf = 0;


            //$.messagepanel.show("This is add");

        datas.PROCESS_CD = $("#cmbPROCESS_CD").val();
        datas.LINE_CD = $("#txtLINE_CD").val();
        datas.LINE_NAME = $("#txtLINE_NAME").val();
        datas.TC_FROM = $("#txtTC_FROM").val();
        datas.TC_TO = $("#txtTC_TO").val();

        if (datas.PROCESS_CD == '' || datas.PROCESS_CD == null) {
            showErrorMesgGrowl("Process Code should not be empty");

            result = false;

        }
        else if (datas.LINE_CD == '' || datas.LINE_CD == null) {
            showErrorMesgGrowl("Line Code should not be empty");

            result = false;

        }
        else if (datas.LINE_NAME == '' || datas.LINE_NAME == null) {
            showErrorMesgGrowl("Line Name should not be empty");

            result = false;

        }
        else if (datas.TC_FROM == '' || datas.TC_FROM == null) {
            showErrorMesgGrowl("TC From should not be empty");

            result = false;

        }
        else if (datas.TC_TO == '' || datas.TC_TO == null) {
            showErrorMesgGrowl("TC To should not be empty");
            result = false;

        }
        else if (datas.PROCESS_CD != 'M' && datas.PROCESS_CD != 'K') {
            showErrorMesgGrowl("Process Code should be 'M' or 'K'");
            result = false;
        }

        if (result != false) {
            $.ajax({
                    type: 'POST',
                    url: '@Url.Content("LineMasterSettingsScreen/SaveAddEdit")',
                    contentType: 'application/json',
                    dataType: "json",
                    traditional: true,
                    data: JSON.stringify(params),
                    beforeSend: function () {
                        popUpProgressShow();
                        console.log(params);
                    },
                success: function (data) {
                   // console.log(data.Result);
                         if (data.Result == "ERROR") {
                             showErrorMesgGrowl(data.ErrMesgs);
                         }
                         else {
                             showSuccessMesgGrowl("Save Success");
                             onSaveSuccess();
                        }
                        popUpProgressHide();
                    },
                    error: function (data) {
                        popUpProgressHide();
                        showErrorMesgGrowl(data.ErrMesgs);
                        
                    },
                    complete: function () {
                      
                        popUpProgressHide();
                    }
            });
        }
      return result;

    }


        function onSaveSuccess() {

            doSearch(1);
            $(".initialBtn").prop("disabled", false);
        }

    function addTheFirstRow(e) {
        btnAddRow_onClick(e);
        $(".initialBtn").prop("disabled", true);
        $("input[type=checkbox]").prop("checked", false);
    }

    function btnAddRow_onClick(classAttr) {
        var $class = $(classAttr).attr('id');
        var tr = $class == 'insertLine' ? $("#tblDetail tbody tr:first") : $(classAttr).closest("tr");
        $(".tableScroll").scrollTop(0);
        tr.clone().addClass($class).css("background-color", "#E9E9E9").prependTo("#tblDetail tbody");

        loopThrougTableRow($("#tblDetail tbody tr." + $class + ""), $class,"Add");
    }

    function initializeEditCopyLine(e) {
        var tr = $(e).closest("tr");
        $("input[type=checkbox]").prop("checked", false);
        $(".initialBtn").prop("disabled", true);

        return tr;
    }

    function loopThrougTableRow(tr, classAttr,mode) {
        tr.each(function (i, e) {
            var i = $(e).children('td');
            for (var x = 2; x < i.length; x++) {
                
                var val = classAttr == "insertLine" ? "" : i.eq(x).text();
               
                if (x == 2) {
                    if (val.includes("M")) {
                        i.eq(x).html("<select class='form-control " + x + " text-center' id='cmbPROCESS_CD'' value='" + val.trim() + "'>" +
                            "<option value = 'K'>K</option>" +
                            "<option value = 'M' selected>M</option>" +
                            "</select>");
                    }
                    else {
                        i.eq(x).html("<select class='form-control " + x + " text-center' id='cmbPROCESS_CD'' value='" + val.trim() + "'>" +
                            "<option value = 'K' selected>K</option>" +
                            "<option value = 'M'>M</option>" +
                            "</select>");
                    }
                    
                } else if (x == 3) {
                    i.eq(x).html("<input type ='text' class='form-control " + x + " text-center' id='txtLINE_CD' value='" + val.trim() + "'/>");
                } else if (x == 4) {
                    i.eq(x).html("<input type ='text' class='form-control " + x + " text-center' id='txtLINE_NAME' value='" + val.trim() + "'/>");
                } else if (x == 5) {
                    i.eq(5).html(tdTcFrom(val.trim()));
                } else if (x == 6) {
                    i.eq(6).html(tdTcTo(val.trim()));
                }
                else {
                    i.eq(x).html("<input type ='text' class='form-control " + x + " text-center' value='" + val.trim() + "'/>");
                }

                dataEditCopy.push(val);
            }
            if (mode == "Edit") {
                i.eq(3).children().prop("disabled", true);
                i.eq(4).children().prop("disabled", true);
                i.eq(7).children().prop("disabled", true);
                i.eq(8).children().prop("disabled", true);
            }
            else {
                i.eq(7).children().prop("disabled", true);
                i.eq(8).children().prop("disabled", true);

            }

            i.eq(1).html(modifiedButton);
           

        });
        $("#tblDetail tbody tr:not(." + tr.attr("class") + ")").css("opacity", "0.3");
        }

     function tdTcFrom(val) {
         var string = `
          <div class="input-group">
                     <input class="form-control _datepicker" id="txtTC_FROM" name="txtTC_FROM" type="text" value="`+ val + `" />
                     <div class="input-group-append">
                         <span class="input-group-text">
                             <i class="far fa-calendar-alt"></i>
                         </span>
                     </div>
                 </div>
         `;
         return string
     }

     function tdTcTo(val) {
         var string = `
           <div class="input-group">
                     <input class="form-control _datepicker" id="txtTC_TO" name="txtTC_TO" type="text" value="`+ val + `" />
                     <div class="input-group-append">
                         <span class="input-group-text">
                             <i class="far fa-calendar-alt"></i>
                         </span>
                     </div>
                 </div>
         `;
         return string
     }


    function onDeleteSingle(lineCode, companyCd, seqNo) {

        $.messagebox.show(
            "Delete Data",
            "MCSTSTD014C: Are you sure you want to delete the record ?",
            "INF",
            "CONFIRM",
            "onConfirmDeleteSingle(" + "'" + lineCode + "'," + "'" + companyCd + "'," + "'" + seqNo + "'" + ")",
            ""
        );
        }

    function onConfirmDeleteSingle(lineCode, companyCd, seqNo) {
            popUpProgressShow();

            var listData = [];
            var id = "";

            var data = new Object();
            data.listData = [];

            var Data1 = new Object();
            Data1.COMPANY_CD = companyCd;
            Data1.LINE_CD = lineCode;
            Data1.SEQ_NO = seqNo;

            data.listData.push(Data1);
            /*
            $(".grid-checkbox-body:checked").each(function () {
                var Data1 = new Object();
                Data1.SOLD_TO_PARTY = $(this).attr('data-soldparty');
                Data1.SHIP_TO_PARTY = $(this).attr('data-shipparty');

                data.listData.push(Data1);
            });
            */

            $.ajax({
                type: 'POST',
                url: '@Url.Content("LineMasterSettingsScreen/Delete")',
                contentType: "application/json",
                dataType: "json",
                traditional: true,
                data: JSON.stringify(data),
                beforeSend: function () {
                    popUpProgressShow();
                },
                success: function (data) {
                    if (data.Result == "ERROR") {
                        showErrorMesgGrowl(data.ErrMesgs);
                    }
                    else {
                        showSuccessMesgGrowl("Delete Success");
                        popUpProgressHide();
                        doSearch(1);
                    }
                },
                error: function (data) {
                    showErrorMesgGrowl(data.ErrMesgs);
                },
                complete: function () {
                    popUpProgressHide();
                    $("#deleteConfirmation").modal("hide");
                }
            });
        }

    // Delete Multiple
    function onConfirmDelete() {
            popUpProgressShow();

            var listData = [];
            var id = "";

            var data = new Object();
            data.listData = [];

            $(".grid-checkbox-body:checked").each(function () {
                var Data1 = new Object();
                Data1.COMPANY_CD = $(this).attr('data-companyCd');
                Data1.LINE_CD = $(this).attr('data-lineCd');
                Data1.SEQ_NO = $(this).attr('data-seqNo');

                data.listData.push(Data1);
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Content("LineMasterSettingsScreen/Delete")',
                contentType: "application/json",
                dataType: "json",
                traditional: true,
                data: JSON.stringify(data),
                beforeSend: function () {
                    popUpProgressShow();
                },
                success: function (data) {
                    if (data.Result == "ERROR") {
                        showErrorMesgGrowl(data.ErrMesgs);
                    }
                    else {
                        showSuccessMesgGrowl("Delete Success");
                        doSearch(1);
                    }
                },
                error: function (data) {
                    showErrorMesgGrowl(data.ErrMesgs);
                },
                complete: function () {
                    popUpProgressHide();
                    $("#deleteConfirmation").modal("hide");
                }
            });
        }

    function onDownload() {
        //$.messagepanel.show("Download Success");
       popUpProgressShow();
       //$.messagepanel.show("Download Success");
       $.fileDownload('@Url.Content("LineMasterSettingsScreen/DownloadFileExcel")', {
	           httpMethod: "POST",
	           data: {
                   LINE_CD: $("#linecd").val(),
                   PROCESS_CD: $("#proccd").val(),
	               RowsPerPage: $("#cbodisplay").val(),
	               CurrentPage: $(".pagination li.page-item.active a").text()
	           },
               successCallback: function (data) {
                   if (data == "ERROR") {
                        $.ajax({
                            type: "POST",
                            url: "@Html.Toyota().Page.GetActionUrl("errorDownload")",
                            async: false,
                            data: {

                            },
                            success: function (data) {
                                $.messagepanel.showContent(data);
                            },
                            error: function (data) {
                                $.messagepanel.show("Error");
                            }
                        });
                   }
                   else {
                       popUpProgressHide();
                       $.ajax({
                        type: "POST",
                        url: "@Html.Toyota().Page.GetActionUrl("download")",
                        async: false,
                        data: {

                        },
                        success: function (data) {
                            $.messagepanel.showContent(data);
                        },
                        error: function (data) {
                            $.messagepanel.show("Error");
                        }
                    });
                   }
	           },
	           failCallback: function (data) {
                   popUpProgressHide();
                   if (data == "ERROR") {
                        $.ajax({
                            type: "POST",
                            url: "@Html.Toyota().Page.GetActionUrl("errorDownload")",
                            async: false,
                            data: {

                            },
                            success: function (data) {
                                $.messagepanel.showContent(data);
                            },
                            error: function (data) {
                                $.messagepanel.show("Error");
                            }
                        });
                   }
                   else {
                       popUpProgressHide();
                       $.ajax({
                        type: "POST",
                        url: "@Html.Toyota().Page.GetActionUrl("download")",
                        async: false,
                        data: {

                        },
                        success: function (data) {
                            $.messagepanel.showContent(data);
                        },
                        error: function (data) {
                            $.messagepanel.show("Error");
                        }
                    });
                   }

	           }

       });
    }

        //Once the upload has completed
        //===================================================
        function onUploadDataFileSuccess(returnResult) {
            if (returnResult.ExceptionErrors != null || returnResult.ExceptionErrors != undefined) {
                showErrorMesgGrowl("<center>" + returnResult.ExceptionErrors[0] + "</center>");
            } else {
                if (returnResult.Params[0].length == 0) {
                    showErrorMesgGrowl("You cant upload the template with empty data");
                } else {
                    $("#importExcel").remove();
                    $('#previewAlert').hide();
                    $('#tblPreview tbody tr').remove();
                    $('#uploadDataFilePopup').modal('hide');
                    $('#btnEditUploaded').removeClass('saveEdit').text('Edit Upload');
                    addDataToTableUploaded(true, returnResult);
                }
            }
        }

        function addDataToTableUploaded(bool, returnResult) {
        var obj = returnResult.Params[0];
        var index = 1; indexPrev = 1;
        if (returnResult.ErrMesgs >= 1 || returnResult.ErrMesgs != null || returnResult.ErrMesgs != undefined) {
            for (var i = 0; i < obj.length; i++) {
                addRowPreviewExcel(obj[i], returnResult.ErrMesgs);
                index++
            }
            var countEmptyField = checkIfEmpty(returnResult.ErrMesgs);
            showErrorMesgGrowl("Upload is succeeded with several blank fields");
            $('#previewAlert').show();
            $('strong#countEmpty').text(countEmptyField.length);
            $("#previewUploadExcel").modal("show");
            $('.modal-title').text('Preview Excel Upload');
            $('#divPreviewExcel input, #divPreviewExcel select').prop('disabled', true);
            editSaveUpload(returnResult.ErrMesgs);
        } else {
            //Change it to yours
            var params = new Object();
            var data = new Object();

            params.ScreenMode = gScreenMode;
            params.data = data;
            //var url = '@Url.Content("LineMasterSettingsScreen/SaveAddEdit")';
            data.listData = []
            for (var i = 0; i < obj.length; i++) {
                var dtl = new Object();
                dtl.COMPANY_CD = obj[i].COMPANY_CD;
                dtl.LINE_CD = obj[i].LINE_CD;
                dtl.SEQ_NO = obj[i].SEQ_NO;
                dtl.TC_FROM = obj[i].TC_FROM;
                dtl.TC_TO = obj[i].TC_TO;
                dtl.LINE_NAME = obj[i].LINE_NAME;
                dtl.PROCESS_CD = obj[i].PROCESS_CD;

                data.listData.push(dtl);
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Content("LineMasterSettingsScreen/SaveAddEdit")',
                contentType: 'application/json',
                dataType: "json",
                traditional: true,
                data: JSON.stringify(params),
                beforeSend: function () {
                    popUpProgressShow();
                    console.log(params);
                },
                success: function (data) {
                    if (data.ErrMesgs != null) {
                        for (var i = 0; i < data.ErrMesgs.length; i++) {
                            if (data.ErrMesgs[i] != null) {
                                showErrorMesgGrowl(data.ErrMesgs[i]);
                            }
                        }
                        doSearch(1);
                    } else {
                        showSuccessMesgGrowl("Save Success");
                        onSaveSuccess();
                    }
                    $("#previewUploadExcel").modal("hide");
                    popUpProgressHide();
                },
                error: function (data) {
                    popUpProgressHide();
                    showErrorMesgGrowl(data.ErrMesgs);
                },
                complete: function () {
                    popUpProgressHide();
                }
            });
            //Change it to yours
        }
    }

    function editSaveUpload(errMsg) {
        $(document).on('click', '#btnEditUploaded', function () {
            $(this).addClass('saveEdit').text('Save');
            $('#divPreviewExcel input, #divPreviewExcel select').prop('disabled', false);
            $('#importExcel').remove();
        })

        $(document).on('click', '.saveEdit', function () {
            $(this).removeClass('saveEdit').text('Edit Upload');
            $('#divPreviewExcel input, #divPreviewExcel select').prop('disabled', true);
            var countEmpty = checkIfEmpty(errMsg);
            if (countEmpty.length == 0) {
                console.log(countEmpty.length);
                $("#divPreviewExcel .text-right").append('<button type="button" class="btn btn-info btn-md" id="importExcel">Import </button>');
            } else {
                $("#importExcel").remove();
            }
        });
    }


    function addRowPreviewExcel(object, errMsg) {
        $('#tblPreview tbody').append(
            '<tr class="' + indexPrev + '">\
            <td>'+ indexPrev + '</td>\
            <td>\
                <input type="text" class="form-control input-sm" id="COMPANY_CD_' + indexPrev + '"\
                    value="' + (object.COMPANY_CD == null ? "" : object.COMPANY_CD) + '">\
            </td>\
            <td>\
                <input type="text" class="form-control input-sm" id="LINE_CD_' + indexPrev + '"\
                    value="' + (object.LINE_CD == null ? "" : object.LINE_CD) + '">\
            </td>\
            <td>\
                <input type="text" class="form-control input-sm" id="SEQ_NO_' + indexPrev + '"\
                    value="' + (object.SEQ_NO == null ? "" : object.SEQ_NO) + '">\
            </td>\
            <td>\
                <input type="text" class="form-control input-sm" id="TC_FROM_' + indexPrev + '"\
                    value="' + (object.TC_FROM == null ? "" : object.TC_FROM) + '">\
            </td>\
            <td>\
                <input type="text" class="form-control input-sm" id="TC_TO_' + indexPrev + '"\
                    value="' + (object.TC_TO == null ? "" : object.TC_TO) + '">\
            </td>\
            <td>\
               <input type="text" class="form-control input-sm _datepicker" id="LINE_NAME_' + indexPrev + '"\
                value="' + (object.LINE_NAME == null ? "" : object.LINE_NAME) + '">\
            </td>\
            <td>\
               <input type="text" class="form-control input-sm _datepicker" id="PROCESS_CD_' + indexPrev + '"\
                value="' + (object.PROCESS_CD == null ? "" : object.PROCESS_CD) + '">\
            </td>\
        </tr>'
        );
        datePicker();
        clearOnPreviewEvent(indexPrev, errMsg);
        indexPrev++;
    }

    function clearOnPreviewEvent(i, errMsg) {
        $(document).on("change",
            "#COMPANY_CD_" + i
            + ",#LINE_CD_" + i
            + ",#SEQ_NO_" + i
            + ",#TC_FROM_" + i
            + ",#TC_TO_" + i
            + ",#LINE_NAME_" + i
            + ",#PROCESS_CD_" + i, function () {
                clearOnEvent(this, errMsg);
            });
    }

    function clearOnEvent(element, errMsg) {
        var id = $(element).attr('id');
        var lastChar = "";
        $(element).removeClass("emptyField mandatory");
        if ($(element).parent().hasClass("customTooltip")) {
            $(element).unwrap();
        }
        var countEmptyPreview = checkIfEmpty(errMsg);
        $('strong#countEmpty').text(countEmptyPreview.length);
        if (countEmptyPreview.length == 0) {
            $("#previewAlert").hide();
        } else {
            $("#previewAlert").show();
        }
    }

    function checkIfEmpty(errMsg) {
        var countEmptyField = [];
        $(".customToolTipText").remove();
        $("#divPreviewExcel input.form-control, #divPreviewExcel select").each(function () {
            if ($(this).val() == "" || $(this).val() == null) {
                if ($(this).parent().hasClass("customTooltip")) {
                    $(this).unwrap();
                }
                $(this).wrapAll("<div class='customTooltip'></div>")
                $(this).addClass("mandatory");
                $(this).after("<span class='customToolTipText'><small class='errorMsg'>Cell is empty</small><i></i></span>");
                $(this).closest('tr').attr('id', 'hasEmptyCells');
                countEmptyField.push(1);
            }
        });
        if (errMsg != null) {
            for (var j = 0; j < errMsg.length; j++) {
                var str1 = errMsg[j].slice(0, errMsg[j].indexOf(" ")) + "_";
                var str2 = errMsg[j].slice(errMsg[j].indexOf("Row") + 4, errMsg[j].indexOf("Row") + 6);
                var id = str1.concat(str2);
                if ($("#" + id).parent().hasClass("customTooltip")) {
                    $("#" + id).next(".customToolTipText").find('.errorMsg').addClass(id);
                    $(".errorMsg." + id).text(errMsg[j]);
                }
            }
        }
        $('#tblPreview tbody tr').each(function () {
            if ($(this).attr('id') != 'hasEmptyCells') {
                //$(this).hide();
            }
        });
        return countEmptyField;
    }

    </script>
}