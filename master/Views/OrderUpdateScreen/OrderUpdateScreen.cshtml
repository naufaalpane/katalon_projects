@using System;
@using Toyota.Common.Web.Platform;
@using GPPSU.Controllers;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section HeadScript{
}

@Html.Partial("_SearchCriteria")

<div id="gridTableCourse">
    @Html.Partial("_GridView")
</div>

<div id="uploadDataFilePopup" class="modal fade" role="dialog" aria-hidden="true" aria-labelledby="basicModal">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="popup-title">Upload Area</h4>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <!-- Dropzone AREA-->
                        <div id="actions" class="row">
                            <div class="col-md-12 fileinput-button mb-2">
                                <div class="row justify-content-center" style="padding: 5px;">
                                    <i class="fa fa-cloud-upload-alt fa-5x" style="opacity: 0.3"></i>
                                </div>
                                <div class="row justify-content-center" style="padding: 5px;">
                                    <span style="color: #999; font-size: 20px;"><i class="fa fa-caret-right blue" style="opacity: 0.7"></i> Drop file to upload <small>(or click)</small> </span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="table table-striped" id="previews">
                                <div id="template" class="file-row">
                                    <div>
                                        <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                                            <div class="progress-bar progress-bar-striped progress-bar-animated bg-info" style="width:0%;" data-dz-uploadprogress><span class="progress-text"></span></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Dropzone AREA-->
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <div class="text-left">

                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                    <div class="text-right">
                        <button type="button" class="btn btn-info" id="linkDownloadTemplate">Download Template </button>
                        <button type="button" id="btnUploadPopupClose" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="divPreviewExcel">
    @Html.Partial("_ModalPreviewExcelUpload")
</div>


@section BodyScript{

    <script type="text/javascript" src="@Url.Content("~/Content/js/jquery.blockUI.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/common.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/jquery-msgbox/jquery.msgBox.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/tdk/jquery.filedownload.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/tdk/jquery.bootstrap-growl.min.js")"></script>


    <script>

        var monthN;

        var trBaseColor;
        var dataEditCopy = [];

            $("#btnCreate").prop("disabled", true);
            $("#btnPrev").prop("disabled", true);
            $("#btnUpload").prop("disabled", true);
            $("#btnDelDtl").prop("disabled", true);
            $("#btn-download").prop("disabled", true);
            $("#insertLine").prop("disabled", true);

        $(document).ready(function () {

            fixedHeader(); //If the table header is more than 1, use this function to freeze the header

            var previewNode = document.querySelector("#template");
            previewNode.id = "";
            var previewTemplate = previewNode.parentNode.innerHTML;
            previewNode.parentNode.removeChild(previewNode);

            var myDropzone = new Dropzone("#actions", {
                url: "@Html.Toyota().Page.GetActionUrl("UploadDataFile")",
                paramName: "file",
                maxFiles: 1,
                acceptedFiles: ".xls",
                addRemoveLinks: false,
                previewTemplate: previewTemplate,
                autoQueue: true,
                clickable: ".fileinput-button",
                uploadprogress: function (file, progress, bytesSent) {
                    if (file.previewElement) {
                        var progressElement = file.previewElement.querySelector("[data-dz-uploadprogress]");
                        progressElement.style.width = progress + "%";
                        progressElement.querySelector(".progress-text").textContent = Math.round(progress) + "%";
                    }
                },
                success: function (file, returnResult) {
                    onUploadDataFileSuccess(returnResult);
                },
                complete: function () {

                },
                error: function (file, errormessage) {
                    if (file.previewElement) {
                        showErrorMesgGrowl(errormessage);
                    }
                },
            });

            myDropzone.on("complete", function (file) {
                myDropzone.removeFile(file);
            });

            $(document).one('ajaxloadstart.page', function (e) {
                try {
                    myDropzone.destroy();
                } catch (e) { }
            });


            $(document).on("click", "#btnUpload", function () {
                gScreenMode = "Upload";
                $("#uploadDataFilePopup").modal();
            });

            $( "#yearmonth" ).datepicker({
                format: 'yyyymm',
                autoclose: true,
                minViewMode: 'months',
                container:'#MonthDatePicker'
            });

            $(document).on("click", "#insertLine", function () {
                gScreenMode = "Add";
                addTheFirstRow(this);
                dataEditCopy.length = 0;
                $('#tblDetail tbody').find('tr:hidden:first').show();
                $("#txtEq5").prop('disabled', true);
                $("#txtEq6").prop('disabled', true);
                $("#txtEq7").prop('disabled', true);
                $("#txtEq8").prop('disabled', true);
                $(".customTable th").css({ "top": "" });
                $(".tableScroll").scrollLeft(0).scrollTop(0);
                fixedHeader();
            });

            $(document).on('click', '#btnSearch', function () {
                doSearch(1);
            });

            $(document).on("click", "#btnCreate", function () {
                $.messagebox.show(
                    "Create Data",
                    "MCSTSTD014C: Are you sure you want to create the record ?",
                    "INF",
                    "CONFIRM",
                    "onConfirmCreate()",
                    ""
                );
            });

            $(document).on("click", "#btnPrev", function () {
                $.messagebox.show(
                    "Create Data",
                    "MCSTSTD014C: Are you sure you want to the record ?",
                    "INF",
                    "CONFIRM",
                    "onConfirmPrev()",
                    ""
                );
            });

            $(document).on("click", "#cancelSubmit", function () {
                var tr = $(this).closest("tr");
                $("#tblDetail tbody tr").css({ "filter": "", "color": "#878787" });;
                $(".initialBtn").prop("disabled", false);
                if (tr.attr("class") == "editLine") {
                    tr.each(function (i, e) {
                        $(e).removeClass($(e).attr("class"));
                        $(e).css("background-color", trBaseColor);
                        $(e).find("td.stickyColumn").css("background-color", trBaseColor);
                        var i = $(e).children('td');
                        for (var x = 2; x <= i.length; x++) {
                            var val = i.eq(x).children().val();
                            i.eq(x).html(val);
                        }
                        i.eq(1).html(initialButton);
                    });
                } else {
                    $(this).closest("tr").remove();
                }
                $(".customTable tr:nth-child(even), .customTable tbody tr:nth-child(even) td.stickyColumn").css("background", "#f2f2f2");
                fixedHeader();
                doSearch(1);
            });


            $(document).on("click", "#editLine", function () {
                gScreenMode = 'Edit';
                dataEditCopy.length = 0;
                var tr = initializeEditCopyLine(this);
                tr.addClass($(this).attr("id"));
                loopThrougTableRow(tr, $(this).attr('id'));

                $("#txtEq5").prop('disabled', true);
                $("#txtEq6").prop('disabled', true);
                $("#txtEq7").prop('disabled', true);
                $("#txtEq8").prop('disabled', true);

                trBaseColor = getComputedStyle(document.querySelector("." + $(this).attr('id') + "")).backgroundColor;
                $(".customTable tr, .customTable tbody td.stickyColumn").css("background", "#fff");
                tr.css("background-color", "#E9E9E9");
                $(tr).find("td.stickyColumn").css("background-color", "#E9E9E9");
            });

            $(document).on("click", "#copyLine", function () {
                gScreenMode = 'Add';
                dataEditCopy.length = 0;
                addTheFirstRow(this);
            });

            $(document).on("click", "#btnSave", function () {
                var params = new Object();
                var datas = new Object();

                params.ScreenMode = gScreenMode;
                params.data = datas;
                var errorinf = 0;

                if (gScreenMode === 'Add') {
                    //search criteria
                    datas.COMPANY_CD = $("#comcd").text();
                    datas.STATUS_CD = $("#statuscd").val();
                    datas.IMPORTER_CD = $("#importercd").val();
                    datas.EXPORTER_CD = $("#exportercd").val();
                    datas.ORDER_TYPE = $("#odt").val();
                    datas.PACK_MONTH = $("#yearmonth").val();
                    datas.CFC = $("#cfc").val();

                    //gridview
                    datas.PART_NO = $("#txtEq2").val();
                    datas.RE_EXPORT_CD = $("#txtEq3").val();
                    datas.LOT_SIZE = $("#txtEq4").val();

                    datas.TOTAL_MONTHLY_01 = $("#txtEq5").val();
                    datas.TOTAL_MONTHLY_02 = $("#txtEq6").val();
                    datas.TOTAL_MONTHLY_03 = $("#txtEq7").val();
                    datas.TOTAL_MONTHLY_04 = $("#txtEq8").val();

                    datas.DAY_ORD_VOL_01 = $("#txtEq12").val();
                    datas.DAY_ORD_VOL_02 = $("#txtEq13").val();
                    datas.DAY_ORD_VOL_03 = $("#txtEq14").val();
                    datas.DAY_ORD_VOL_04 = $("#txtEq15").val();
                    datas.DAY_ORD_VOL_05 = $("#txtEq16").val();
                    datas.DAY_ORD_VOL_06 = $("#txtEq17").val();
                    datas.DAY_ORD_VOL_07 = $("#txtEq18").val();
                    datas.DAY_ORD_VOL_08 = $("#txtEq19").val();
                    datas.DAY_ORD_VOL_09 = $("#txtEq20").val();
                    datas.DAY_ORD_VOL_10 = $("#txtEq21").val();
                    datas.DAY_ORD_VOL_11 = $("#txtEq22").val();
                    datas.DAY_ORD_VOL_12 = $("#txtEq23").val();
                    datas.DAY_ORD_VOL_13 = $("#txtEq24").val();
                    datas.DAY_ORD_VOL_14 = $("#txtEq25").val();
                    datas.DAY_ORD_VOL_15 = $("#txtEq26").val();
                    datas.DAY_ORD_VOL_16 = $("#txtEq27").val();
                    datas.DAY_ORD_VOL_17 = $("#txtEq28").val();
                    datas.DAY_ORD_VOL_18 = $("#txtEq29").val();
                    datas.DAY_ORD_VOL_19 = $("#txtEq30").val();
                    datas.DAY_ORD_VOL_20 = $("#txtEq31").val();
                    datas.DAY_ORD_VOL_21 = $("#txtEq32").val();
                    datas.DAY_ORD_VOL_22 = $("#txtEq33").val();
                    datas.DAY_ORD_VOL_23 = $("#txtEq34").val();
                    datas.DAY_ORD_VOL_24 = $("#txtEq35").val();
                    datas.DAY_ORD_VOL_25 = $("#txtEq36").val();
                    datas.DAY_ORD_VOL_26 = $("#txtEq37").val();
                    datas.DAY_ORD_VOL_27 = $("#txtEq38").val();
                    datas.DAY_ORD_VOL_28 = $("#txtEq39").val();

                    if ("#txtEq40" != null) {
                        datas.DAY_ORD_VOL_29 = $("#txtEq40").val();
                    }
                    if ("#txtEq41" != null) {
                        datas.DAY_ORD_VOL_30 = $("#txtEq41").val();
                    }
                    if ("#txtEq42" != null) {
                        datas.DAY_ORD_VOL_31 = $("#txtEq42").val();
                    }
                }
                else
                {
                    datas.COMPANY_CD = $("#comcd").text();
                    datas.STATUS_CD = $("#statuscd").val();
                    datas.IMPORTER_CD = $("#importercd").val();
                    datas.EXPORTER_CD = $("#exportercd").val();
                    datas.ORDER_TYPE = $("#odt").val();
                    datas.PACK_MONTH = $("#yearmonth").val();
                    datas.CFC = $("#cfc").val();

                    //gridview
                    datas.PART_NO = $("#txtEq2").val();
                    datas.RE_EXPORT_CD = $("#txtEq3").val();
                    datas.LOT_SIZE = $("#txtEq4").val();

                    datas.TOTAL_MONTHLY_01 = $("#txtEq5").val();
                    datas.TOTAL_MONTHLY_02 = $("#txtEq6").val();
                    datas.TOTAL_MONTHLY_03 = $("#txtEq7").val();
                    datas.TOTAL_MONTHLY_04 = $("#txtEq8").val();

                    datas.TOTAL_MONTHLY_01 = $("#txtEq5").val();
                    datas.TOTAL_MONTHLY_02 = $("#txtEq6").val();
                    datas.TOTAL_MONTHLY_03 = $("#txtEq7").val();
                    datas.TOTAL_MONTHLY_04 = $("#txtEq8").val();

                    datas.DAY_ORD_VOL_01 = $("#txtEq12").val();
                    datas.DAY_ORD_VOL_02 = $("#txtEq13").val();
                    datas.DAY_ORD_VOL_03 = $("#txtEq14").val();
                    datas.DAY_ORD_VOL_04 = $("#txtEq15").val();
                    datas.DAY_ORD_VOL_05 = $("#txtEq16").val();
                    datas.DAY_ORD_VOL_06 = $("#txtEq17").val();
                    datas.DAY_ORD_VOL_07 = $("#txtEq18").val();
                    datas.DAY_ORD_VOL_08 = $("#txtEq19").val();
                    datas.DAY_ORD_VOL_09 = $("#txtEq20").val();
                    datas.DAY_ORD_VOL_10 = $("#txtEq21").val();
                    datas.DAY_ORD_VOL_11 = $("#txtEq22").val();
                    datas.DAY_ORD_VOL_12 = $("#txtEq23").val();
                    datas.DAY_ORD_VOL_13 = $("#txtEq24").val();
                    datas.DAY_ORD_VOL_14 = $("#txtEq25").val();
                    datas.DAY_ORD_VOL_15 = $("#txtEq26").val();
                    datas.DAY_ORD_VOL_16 = $("#txtEq27").val();
                    datas.DAY_ORD_VOL_17 = $("#txtEq28").val();
                    datas.DAY_ORD_VOL_18 = $("#txtEq29").val();
                    datas.DAY_ORD_VOL_19 = $("#txtEq30").val();
                    datas.DAY_ORD_VOL_20 = $("#txtEq31").val();
                    datas.DAY_ORD_VOL_21 = $("#txtEq32").val();
                    datas.DAY_ORD_VOL_22 = $("#txtEq33").val();
                    datas.DAY_ORD_VOL_23 = $("#txtEq34").val();
                    datas.DAY_ORD_VOL_24 = $("#txtEq35").val();
                    datas.DAY_ORD_VOL_25 = $("#txtEq36").val();
                    datas.DAY_ORD_VOL_26 = $("#txtEq37").val();
                    datas.DAY_ORD_VOL_27 = $("#txtEq38").val();
                    datas.DAY_ORD_VOL_28 = $("#txtEq39").val();

                    if ("#txtEq40" != null) {
                        datas.DAY_ORD_VOL_29 = $("#txtEq40").val();
                    }
                    if ("#txtEq41" != null) {
                        datas.DAY_ORD_VOL_30 = $("#txtEq41").val();
                    }
                    if ("#txtEq42" != null) {
                        datas.DAY_ORD_VOL_31 = $("#txtEq42").val();
                    }
                    datas.YYMM = $("#txtEq9").val();
                    datas.RECEIVE_NO = $("#txtEq10").val();
                    datas.DETAIL_NO = $("#txtEq11").val();
                }

                //validasi
                if (datas.STATUS_CD == '' || datas.STATUS_CD == null) {
                    showErrorMesgGrowl("Status Code should not be empty");
                    errorinf = 1;
                }

                if (datas.IMPORTER_CD == '' || datas.IMPORTER_CD == null) {
                    showErrorMesgGrowl("Importer Code should not be empty");
                    errorinf = 1;
                }

                if (datas.EXPORTER_CD == '' || datas.EXPORTER_CD == null) {
                    showErrorMesgGrowl("Exporter Code should not be empty");
                    errorinf = 1;
                }

                if (datas.ORDER_TYPE == '' || datas.ORDER_TYPE == null) {
                    showErrorMesgGrowl("Order Type should not be empty, choose select R or U");
                    errorinf = 1;
                }

                if (datas.PACK_MONTH == '' || datas.PACK_MONTH == null) {
                    showErrorMesgGrowl("Year Month should not be empty");
                    errorinf = 1;
                }

                if (datas.CFC == '' || datas.CFC == null) {
                    showErrorMesgGrowl("CFC should not be empty");
                    errorinf = 1;
                }

                if (datas.PART_NO == '' || datas.PART_NO == null) {
                    showErrorMesgGrowl("Parts No should not be empty");
                    errorinf = 1;
                }

                if (datas.RE_EXPORT_CD == '' || datas.RE_EXPORT_CD == null) {
                    showErrorMesgGrowl("Re-Export should not be empty");
                    errorinf = 1;
                }

                if (datas.LOT_SIZE == '' || datas.LOT_SIZE == null) {
                    showErrorMesgGrowl("Lot Size should not be empty");
                    errorinf = 1;
                }

                if (datas.DAY_ORD_VOL_01 == '' || datas.DAY_ORD_VOL_01 == null) {
                    showErrorMesgGrowl("Day 1 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_02 == '' || datas.DAY_ORD_VOL_02 == null) {
                    showErrorMesgGrowl("Day 2 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_03 == '' || datas.DAY_ORD_VOL_03 == null) {
                    showErrorMesgGrowl("Day 3 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_04 == '' || datas.DAY_ORD_VOL_04 == null) {
                    showErrorMesgGrowl("Day 4 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_05 == '' || datas.DAY_ORD_VOL_05 == null) {
                    showErrorMesgGrowl("Day 5 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_06 == '' || datas.DAY_ORD_VOL_06 == null) {
                    showErrorMesgGrowl("Day 6 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_07 == '' || datas.DAY_ORD_VOL_07 == null) {
                    showErrorMesgGrowl("Day 7 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_08 == '' || datas.DAY_ORD_VOL_08 == null) {
                    showErrorMesgGrowl("Day 8 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_09 == '' || datas.DAY_ORD_VOL_09 == null) {
                    showErrorMesgGrowl("Day 9 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_10 == '' || datas.DAY_ORD_VOL_10 == null) {
                    showErrorMesgGrowl("Day 10 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_11 == '' || datas.DAY_ORD_VOL_11 == null) {
                    showErrorMesgGrowl("Day 11 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_12 == '' || datas.DAY_ORD_VOL_12 == null) {
                    showErrorMesgGrowl("Day 12 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_13 == '' || datas.DAY_ORD_VOL_13 == null) {
                    showErrorMesgGrowl("Day 13 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_14 == '' || datas.DAY_ORD_VOL_14 == null) {
                    showErrorMesgGrowl("Day 14 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_15 == '' || datas.DAY_ORD_VOL_15 == null) {
                    showErrorMesgGrowl("Day 15 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_16 == '' || datas.DAY_ORD_VOL_16 == null) {
                    showErrorMesgGrowl("Day 16 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_17 == '' || datas.DAY_ORD_VOL_17 == null) {
                    showErrorMesgGrowl("Day 17 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_18 == '' || datas.DAY_ORD_VOL_18 == null) {
                    showErrorMesgGrowl("Day 18 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_19 == '' || datas.DAY_ORD_VOL_19 == null) {
                    showErrorMesgGrowl("Day 19 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_20 == '' || datas.DAY_ORD_VOL_20 == null) {
                    showErrorMesgGrowl("Day 20 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_21 == '' || datas.DAY_ORD_VOL_21 == null) {
                    showErrorMesgGrowl("Day 21 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_22 == '' || datas.DAY_ORD_VOL_22 == null) {
                    showErrorMesgGrowl("Day 22 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_23 == '' || datas.DAY_ORD_VOL_23 == null) {
                    showErrorMesgGrowl("Day 23 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_24 == '' || datas.DAY_ORD_VOL_24 == null) {
                    showErrorMesgGrowl("Day 24 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_25 == '' || datas.DAY_ORD_VOL_25 == null) {
                    showErrorMesgGrowl("Day 25 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_26 == '' || datas.DAY_ORD_VOL_26 == null) {
                    showErrorMesgGrowl("Day 26 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_27 == '' || datas.DAY_ORD_VOL_27 == null) {
                    showErrorMesgGrowl("Day 27 should not be empty");
                    errorinf = 1;
                }
                if (datas.DAY_ORD_VOL_28 == '' || datas.DAY_ORD_VOL_28 == null) {
                    showErrorMesgGrowl("Day 28 should not be empty");
                    errorinf = 1;
                }
                if ($("#txtEq3").val().length > 1) {
                    showErrorMesgGrowl("Re-Export max 1 character");
                    errorinf = 1;
                }

                if (errorinf == 1) {

                }
                else {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Content("OrderUpdateScreen/AddEditSave")',
                        contentType: 'application/json',
                        dataType: "json",
                        traditional: true,
                        data: JSON.stringify(params),
                        beforeSend: function () {
                        popUpProgressShow();
                        console.log(params);
                        },
                        success: function (data) {
                            if (data.Result == "ERROR") {
                                showErrorMesgGrowl(data.ErrMesgs);
                            }
                            else {
                                showSuccessMesgGrowl("Save Success");
                                onSaveSuccess();
                            }
                            popUpProgressHide();
                        },
                        error: function (data) {
                            popUpProgressHide();
                            showErrorMesgGrowl(data.ErrMesgs);
                        },
                        complete: function () {
                            popUpProgressHide();
                        }
                    });
                }

            });

            $(document).on("click", "#btnDelDtl", function () {
                var checked = $(".grid-checkbox-body").length;

                if (checked < 1) {
                    showErrorMesgGrowl("Choose one or more data(s) to be delete!");
                }
                else {
                    //showConfirmMesg("Are you sure you want to delete the record?", onConfirmDelete, "Delete Confirmation");
                    $.messagebox.show(
                        "Delete Data",
                        "MCSTSTD014C: Are you sure you want to delete the record ?",
                        "INF",
                        "CONFIRM",
                        "onConfirmDelete()",
                        ""
                    );
                    //$("#deleteConfirmation").modal();
                }
            });

            $(document).on("click", "#linkDownloadTemplate", function () {
                popUpProgressShow();
                $.fileDownload('@Url.Content("~/OrderUpdateScreen/DownloadTemplate")', {
                    httpMethod: "POST",
                    data: {
                        COMPANY_CD: $("#comcd").text(),
                        STATUS_CD: $("#statuscd").val(),
                        IMPORTER_CD: $("#importercd").val(),
                        EXPORTER_CD: $("#exportercd").val(),
                        ORDER_TYPE: $("#odt").val(),
                        PACK_MONTH: $("#yearmonth").val(),
                        CFC: $("#cfc").val()
                    },
                    successCallback: function (url) {
                        popUpProgressHide();
                    },
                    failCallback: function (responseHtml, url) {
                        popUpProgressHide();
                        var returnResult = JSON.parse(responseHtml.replace("<pre>", "").replace("</pre>", ""));
                        handleAjaxResultGrowl(returnResult, "Download Template");
                    }
                });
            });

            $(document).on('click', '#importExcel', function () {
                var params = new Object();
                var data = new Object();

                params.ScreenMode = gScreenMode;
                params.data = data;
                var i = 1;
                data.listData = []

                $('#tblPreview tbody tr').each(function () {
                    var dtl = new Object();

                    dtl.COMPANY_CD = $(this).find('input#Company_Cd_' + i).val();
                    dtl.IMPORTER_CD = $(this).find('input#Importer_Cd_' + i).val();
                    dtl.EXPORTER_CD = $(this).find('input#Exporter_Cd_' + i).val();
                    dtl.ORDER_TYPE = $(this).find('input#Order_Type_' + i).val();
                    dtl.PACK_MONTH = $(this).find('input#Pack_Month_' + i).val();
                    dtl.CFC = $(this).find('input#Cfc_' + i).val();
                    dtl.STATUS_CD = $(this).find('input#Status_Cd_' + i).val();

                    dtl.PART_NO = $(this).find('input#Part_No_' + i).val();
                    dtl.RE_EXPORT_CD = $(this).find('input#Re_Exp_' + i).val();
                    dtl.LOT_SIZE = $(this).find('input#Lot_Size_' + i).val();

                    dtl.TOTAL_MONTHLY_01 = $(this).find('input#Total_Month1_' + i).val();
                    dtl.TOTAL_MONTHLY_02 = $(this).find('input#Total_Month2_' + i).val();
                    dtl.TOTAL_MONTHLY_03 = $(this).find('input#Total_Month3_' + i).val();
                    dtl.TOTAL_MONTHLY_04 = $(this).find('input#Total_Month4_' + i).val();

                    dtl.DAY_ORD_VOL_01 = $(this).find('input#Day_Aloc_Ratio_01_' + i).val();
                    dtl.DAY_ORD_VOL_02 = $(this).find('input#Day_Aloc_Ratio_02_' + i).val();
                    dtl.DAY_ORD_VOL_03 = $(this).find('input#Day_Aloc_Ratio_03_' + i).val();
                    dtl.DAY_ORD_VOL_04 = $(this).find('input#Day_Aloc_Ratio_04_' + i).val();
                    dtl.DAY_ORD_VOL_05 = $(this).find('input#Day_Aloc_Ratio_05_' + i).val();
                    dtl.DAY_ORD_VOL_06 = $(this).find('input#Day_Aloc_Ratio_06_' + i).val();
                    dtl.DAY_ORD_VOL_07 = $(this).find('input#Day_Aloc_Ratio_07_' + i).val();
                    dtl.DAY_ORD_VOL_08 = $(this).find('input#Day_Aloc_Ratio_08_' + i).val();
                    dtl.DAY_ORD_VOL_09 = $(this).find('input#Day_Aloc_Ratio_09_' + i).val();
                    dtl.DAY_ORD_VOL_10 = $(this).find('input#Day_Aloc_Ratio_10_' + i).val();
                    dtl.DAY_ORD_VOL_11 = $(this).find('input#Day_Aloc_Ratio_11_' + i).val();
                    dtl.DAY_ORD_VOL_12 = $(this).find('input#Day_Aloc_Ratio_12_' + i).val();
                    dtl.DAY_ORD_VOL_13 = $(this).find('input#Day_Aloc_Ratio_13_' + i).val();
                    dtl.DAY_ORD_VOL_14 = $(this).find('input#Day_Aloc_Ratio_14_' + i).val();
                    dtl.DAY_ORD_VOL_15 = $(this).find('input#Day_Aloc_Ratio_15_' + i).val();
                    dtl.DAY_ORD_VOL_16 = $(this).find('input#Day_Aloc_Ratio_16_' + i).val();
                    dtl.DAY_ORD_VOL_17 = $(this).find('input#Day_Aloc_Ratio_17_' + i).val();
                    dtl.DAY_ORD_VOL_18 = $(this).find('input#Day_Aloc_Ratio_18_' + i).val();
                    dtl.DAY_ORD_VOL_19 = $(this).find('input#Day_Aloc_Ratio_19_' + i).val();
                    dtl.DAY_ORD_VOL_20 = $(this).find('input#Day_Aloc_Ratio_20_' + i).val();
                    dtl.DAY_ORD_VOL_21 = $(this).find('input#Day_Aloc_Ratio_21_' + i).val();
                    dtl.DAY_ORD_VOL_22 = $(this).find('input#Day_Aloc_Ratio_22_' + i).val();
                    dtl.DAY_ORD_VOL_23 = $(this).find('input#Day_Aloc_Ratio_23_' + i).val();
                    dtl.DAY_ORD_VOL_24 = $(this).find('input#Day_Aloc_Ratio_24_' + i).val();
                    dtl.DAY_ORD_VOL_25 = $(this).find('input#Day_Aloc_Ratio_25_' + i).val();
                    dtl.DAY_ORD_VOL_26 = $(this).find('input#Day_Aloc_Ratio_26_' + i).val();
                    dtl.DAY_ORD_VOL_27 = $(this).find('input#Day_Aloc_Ratio_27_' + i).val();
                    dtl.DAY_ORD_VOL_28 = $(this).find('input#Day_Aloc_Ratio_28_' + i).val();
                    dtl.DAY_ORD_VOL_29 = $(this).find('input#Day_Aloc_Ratio_29_' + i).val();
                    dtl.DAY_ORD_VOL_30 = $(this).find('input#Day_Aloc_Ratio_30_' + i).val();
                    dtl.DAY_ORD_VOL_31 = $(this).find('input#Day_Aloc_Ratio_31_' + i).val();

                    dtl.DISABLE_FLAG = '0';

                    data.listData.push(dtl);
                    i++;
                });
                console.log(data.listData)

                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("OrderUpdateScreen/AddEditSave")',
                    contentType: 'application/json',
                    dataType: "json",
                    traditional: true,
                    data: JSON.stringify(params),
                    beforeSend: function () {
                        popUpProgressShow();
                        console.log(params);
                    },
                    success: function (data) {
                        if (data.Result == "ERROR") {
                            showErrorMesgGrowl(data.ErrMesgs);
                            $("#previewUploadExcel").modal("hide");
                            doSearch(1);
                        }
                        else {
                            showSuccessMesgGrowl("Save Success");
                            onSaveSuccess();
                        }
                        popUpProgressHide();
                    },
                    error: function (data) {
                        popUpProgressHide();
                        showErrorMesgGrowl(data.ErrMesgs);
                    },
                    complete: function () {
                        popUpProgressHide();
                    }
                });
            });
        })

        function onSearch() {
            doSearch(1);
        }

        function onN1Month() {
            var validation = validate();
            if (validation) {
                $("#btnCreate").prop("disabled", false);
                $("#btnPrev").prop("disabled", false);
                $("#btnUpload").prop("disabled", false);
                $("#btnDelDtl").prop("disabled", false);
                $("#btn-download").prop("disabled", false);
                $("#insertLine").prop("disabled", false);

                $("#importercd").prop("disabled", true);
                $("#exportercd").prop("disabled", true);
                $("#odt").prop("disabled", true);
                $("#yearmonth").prop("disabled", true);
                $("#cfc").prop("disabled", true);
                $("#statuscd").prop("disabled", true);

                var date = $("#yearmonth").val();
                var newDate = date.substring(0, 4) + '-' + date.substring(4, 6)

                var resultDate = new Date(newDate);
                resultDate.setMonth(resultDate.getMonth() + 1);
                console.log(resultDate);

                function formatDate(date) {
                    var d = new Date(date),
                        month = '' + (d.getMonth() + 1),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }

                monthN = formatDate(resultDate);
                monthN = monthN.substring(0, 7)
                monthN = monthN.replace("-", "");
                //console.log(monthN)

                // total monthly 1,2,3
                var date1 = $("#yearmonth").val();
                var newDate1 = date1.substring(0, 4) + '-' + date1.substring(4, 6)
                var date2 = $("#yearmonth").val();
                var newDate2 = date2.substring(0, 4) + '-' + date2.substring(4, 6)
                var date3 = $("#yearmonth").val();
                var newDate3 = date3.substring(0, 4) + '-' + date3.substring(4, 6)

                var packmontplus1 = new Date(newDate1);
                var packmontplus2 = new Date(newDate2);
                var packmontplus3 = new Date(newDate3);
                packmontplus1.setMonth(packmontplus1.getMonth() + 1);
                packmontplus2.setMonth(packmontplus2.getMonth() + 1);
                packmontplus3.setMonth(packmontplus3.getMonth() + 1);

                function formatDate1(date1) {
                    var d = new Date(date1),
                        month = '' + (d.getMonth() + 1),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult1 = formatDate1(packmontplus1);
                dateResult1 = dateResult1.substring(0, 7)
                dateResult1 = dateResult1.replace("-", "");

                function formatDate2(date2) {
                    var d = new Date(date2),
                        month = '' + (d.getMonth() + 2),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult2 = formatDate2(packmontplus2);
                dateResult2 = dateResult2.substring(0, 7)
                dateResult2 = dateResult2.replace("-", "");

                function formatDate3(date3) {
                    var d = new Date(date3),
                        month = '' + (d.getMonth() + 3),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult3 = formatDate3(packmontplus3);
                dateResult3 = dateResult3.substring(0, 7)
                dateResult3 = dateResult3.replace("-", "");

                popUpProgressShow();
                $.ajax({
                    type: "POST",
                    url: "@Html.Toyota().Page.GetActionUrl("Search")",
                    data: {
                        COMPANY_CD: $("#comcd").text(),
                        STATUS_CD: $("#statuscd").val(),
                        IMPORTER_CD: $("#importercd").val(),
                        EXPORTER_CD: $("#exportercd").val(),
                        ORDER_TYPE: $("#odt").val(),
                        PACK_MONTH: $("#yearmonth").val(),
                        CFC: $("#cfc").val(),
                        DISABLE_FLAG: 0,
                        RE_EXPORT_CD: $("#reexp").val(),

                        YYMM: monthN,

                        rowsPerPage: $("#cbodisplay").val(),
                        currentPage: 1,

                        TOTAL_MONTHLY_01: $("#yearmonth").val(),
                        TOTAL_MONTHLY_02: dateResult1,
                        TOTAL_MONTHLY_03: dateResult2,
                        TOTAL_MONTHLY_04: dateResult3

                    },
                    success: function (data) {
                        $("#gridTableCourse").html(data);
                        fixedHeader();
                        popUpProgressHide();
                    },
                    error: function (data) {
                        popUpProgressHide();
                        console.log(data);
                    }
                });
            }
        }

        function onN2Month() {
            var validation = validate();
            if (validation) {
                $("#btnCreate").prop("disabled", false);
                $("#btnPrev").prop("disabled", false);
                $("#btnUpload").prop("disabled", false);
                $("#btnDelDtl").prop("disabled", false);
                $("#btn-download").prop("disabled", false);
                $("#insertLine").prop("disabled", false);

                $("#importercd").prop("disabled", true);
                $("#exportercd").prop("disabled", true);
                $("#odt").prop("disabled", true);
                $("#yearmonth").prop("disabled", true);
                $("#cfc").prop("disabled", true);
                $("#statuscd").prop("disabled", true);

                var date = $("#yearmonth").val();
                var newDate = date.substring(0, 4) + '-' + date.substring(4, 6)

                var resultDate = new Date(newDate);
                resultDate.setMonth(resultDate.getMonth() + 1);
                console.log(resultDate);

                function formatDate(date) {
                    var d = new Date(date),
                        month = '' + (d.getMonth() + 2),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }

                monthN = formatDate(resultDate);
                monthN = monthN.substring(0, 7)
                monthN = monthN.replace("-", "");
                //console.log(dateResult)

                // total monthly 1,2,3
                var date1 = $("#yearmonth").val();
                var newDate1 = date1.substring(0, 4) + '-' + date1.substring(4, 6)
                var date2 = $("#yearmonth").val();
                var newDate2 = date2.substring(0, 4) + '-' + date2.substring(4, 6)
                var date3 = $("#yearmonth").val();
                var newDate3 = date3.substring(0, 4) + '-' + date3.substring(4, 6)

                var packmontplus1 = new Date(newDate1);
                var packmontplus2 = new Date(newDate2);
                var packmontplus3 = new Date(newDate3);
                packmontplus1.setMonth(packmontplus1.getMonth() + 1);
                packmontplus2.setMonth(packmontplus2.getMonth() + 1);
                packmontplus3.setMonth(packmontplus3.getMonth() + 1);

                function formatDate1(date1) {
                    var d = new Date(date1),
                        month = '' + (d.getMonth() + 1),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult1 = formatDate1(packmontplus1);
                dateResult1 = dateResult1.substring(0, 7)
                dateResult1 = dateResult1.replace("-", "");

                function formatDate2(date2) {
                    var d = new Date(date2),
                        month = '' + (d.getMonth() + 2),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult2 = formatDate2(packmontplus2);
                dateResult2 = dateResult2.substring(0, 7)
                dateResult2 = dateResult2.replace("-", "");

                function formatDate3(date3) {
                    var d = new Date(date3),
                        month = '' + (d.getMonth() + 3),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult3 = formatDate3(packmontplus3);
                dateResult3 = dateResult3.substring(0, 7)
                dateResult3 = dateResult3.replace("-", "");

                popUpProgressShow();
                $.ajax({
                    type: "POST",
                    url: "@Html.Toyota().Page.GetActionUrl("Search")",
                    data: {
                        COMPANY_CD: $("#comcd").text(),
                        STATUS_CD: $("#statuscd").val(),
                        IMPORTER_CD: $("#importercd").val(),
                        EXPORTER_CD: $("#exportercd").val(),
                        ORDER_TYPE: $("#odt").val(),
                        PACK_MONTH: $("#yearmonth").val(),
                        CFC: $("#cfc").val(),
                        DISABLE_FLAG: 0,
                        RE_EXPORT_CD: $("#reexp").val(),

                        YYMM: monthN,

                        rowsPerPage: $("#cbodisplay").val(),
                        currentPage: 1,

                        TOTAL_MONTHLY_01: $("#yearmonth").val(),
                        TOTAL_MONTHLY_02: dateResult1,
                        TOTAL_MONTHLY_03: dateResult2,
                        TOTAL_MONTHLY_04: dateResult3
                    },
                    success: function (data) {
                        $("#gridTableCourse").html(data);
                        fixedHeader();
                        popUpProgressHide();
                    },
                    error: function (data) {
                        popUpProgressHide();
                        console.log(data);
                    }
                });
            }
        }

        function onN3Month() {
            var validation = validate();
            if (validation) {
                $("#btnCreate").prop("disabled", false);
                $("#btnPrev").prop("disabled", false);
                $("#btnUpload").prop("disabled", false);
                $("#btnDelDtl").prop("disabled", false);
                $("#btn-download").prop("disabled", false);
                $("#insertLine").prop("disabled", false);

                $("#importercd").prop("disabled", true);
                $("#exportercd").prop("disabled", true);
                $("#odt").prop("disabled", true);
                $("#yearmonth").prop("disabled", true);
                $("#cfc").prop("disabled", true);
                $("#statuscd").prop("disabled", true);

                var date = $("#yearmonth").val();
                var newDate = date.substring(0, 4) + '-' + date.substring(4, 6)

                var resultDate = new Date(newDate);
                resultDate.setMonth(resultDate.getMonth() + 1);
                console.log(resultDate);

                function formatDate(date) {
                    var d = new Date(date),
                        month = '' + (d.getMonth() + 3),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }

                monthN = formatDate(resultDate);
                monthN = monthN.substring(0, 7)
                monthN = monthN.replace("-", "");
                //console.log(dateResult)

                // total monthly 1,2,3
                var date1 = $("#yearmonth").val();
                var newDate1 = date1.substring(0, 4) + '-' + date1.substring(4, 6)
                var date2 = $("#yearmonth").val();
                var newDate2 = date2.substring(0, 4) + '-' + date2.substring(4, 6)
                var date3 = $("#yearmonth").val();
                var newDate3 = date3.substring(0, 4) + '-' + date3.substring(4, 6)

                var packmontplus1 = new Date(newDate1);
                var packmontplus2 = new Date(newDate2);
                var packmontplus3 = new Date(newDate3);
                packmontplus1.setMonth(packmontplus1.getMonth() + 1);
                packmontplus2.setMonth(packmontplus2.getMonth() + 1);
                packmontplus3.setMonth(packmontplus3.getMonth() + 1);

                function formatDate1(date1) {
                    var d = new Date(date1),
                        month = '' + (d.getMonth() + 1),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult1 = formatDate1(packmontplus1);
                dateResult1 = dateResult1.substring(0, 7)
                dateResult1 = dateResult1.replace("-", "");

                function formatDate2(date2) {
                    var d = new Date(date2),
                        month = '' + (d.getMonth() + 2),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult2 = formatDate2(packmontplus2);
                dateResult2 = dateResult2.substring(0, 7)
                dateResult2 = dateResult2.replace("-", "");

                function formatDate3(date3) {
                    var d = new Date(date3),
                        month = '' + (d.getMonth() + 3),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult3 = formatDate3(packmontplus3);
                dateResult3 = dateResult3.substring(0, 7)
                dateResult3 = dateResult3.replace("-", "");

                popUpProgressShow();
                $.ajax({
                    type: "POST",
                    url: "@Html.Toyota().Page.GetActionUrl("Search")",
                    data: {
                        COMPANY_CD: $("#comcd").text(),
                        STATUS_CD: $("#statuscd").val(),
                        IMPORTER_CD: $("#importercd").val(),
                        EXPORTER_CD: $("#exportercd").val(),
                        ORDER_TYPE: $("#odt").val(),
                        PACK_MONTH: $("#yearmonth").val(),
                        CFC: $("#cfc").val(),
                        DISABLE_FLAG: 0,
                        RE_EXPORT_CD: $("#reexp").val(),

                        YYMM: monthN,

                        rowsPerPage: $("#cbodisplay").val(),
                        currentPage: 1,

                        TOTAL_MONTHLY_01: $("#yearmonth").val(),
                        TOTAL_MONTHLY_02: dateResult1,
                        TOTAL_MONTHLY_03: dateResult2,
                        TOTAL_MONTHLY_04: dateResult3
                    },
                    success: function (data) {
                        $("#gridTableCourse").html(data);
                        fixedHeader();
                        popUpProgressHide();
                    },
                    error: function (data) {
                        popUpProgressHide();
                        console.log(data);
                    }
                });
            }
        }

        function onDeleteSingle(companyCd, receiveNo, detailNo, yymm) {

            $.messagebox.show(
                "Delete Data",
                "MCSTSTD014C: Are you sure you want to delete the record ?",
                "INF",
                "CONFIRM",
                "onConfirmDeleteSingle(" + "'" + companyCd + "'," +
                                           "'" + receiveNo + "'," +
                                           "'" + detailNo + "'," +
                                           "'" + yymm + "'" + ")",
                                           ""
            );
        }

        function onConfirmDeleteSingle(companyCd, receiveNo, detailNo, yymm) {
            popUpProgressShow();

            var listData = [];
            var id = "";

            var data = new Object();
            data.listData = [];

            var Data1 = new Object();
            Data1.COMPANY_CD = companyCd;
            Data1.RECEIVE_NO = receiveNo;
            Data1.DETAIL_NO = detailNo;
            Data1.YYMM = yymm;

            data.listData.push(Data1);

            $.ajax({
                type: 'POST',
                url: '@Url.Content("OrderUpdateScreen/Delete")',
                contentType: "application/json",
                dataType: "json",
                traditional: true,
                data: JSON.stringify(data),
                beforeSend: function () {
                    popUpProgressShow();
                },
                success: function (data) {
                    if (data.Result == "ERROR") {
                        showErrorMesgGrowl(data.ErrMesgs);
                    }
                    else {
                        showSuccessMesgGrowl("Delete Success");
                        popUpProgressHide();
                        doSearch(1);
                    }
                },
                error: function (data) {
                    showErrorMesgGrowl(data.ErrMesgs);
                },
                complete: function () {
                    popUpProgressHide();
                    $("#deleteConfirmation").modal("hide");
                }
            });
        }

        @*delete multiple*@
        function onConfirmDelete() {
            popUpProgressShow();

            var listData = [];
            var id = "";

            var data = new Object();
            data.listData = [];

            $(".grid-checkbox-body:checked").each(function () {
                var Data1 = new Object();
                Data1.COMPANY_CD = $(this).attr('data-companyCd');
                Data1.RECEIVE_NO = $(this).attr('data-receiveNo');
                Data1.DETAIL_NO = $(this).attr('data-detailNo');
                Data1.YYMM = $(this).attr('data-yymm');

                data.listData.push(Data1);
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Content("OrderUpdateScreen/Delete")',
                contentType: "application/json",
                dataType: "json",
                traditional: true,
                data: JSON.stringify(data),
                beforeSend: function () {
                    popUpProgressShow();
                },
                success: function (data) {
                    if (data.Result == "ERROR") {
                        showErrorMesgGrowl(data.ErrMesgs);
                    }
                    else {
                        showSuccessMesgGrowl("Delete Success");
                        doSearch(1);
                    }
                },
                error: function (data) {
                    showErrorMesgGrowl(data.ErrMesgs);
                },
                complete: function () {
                    popUpProgressHide();
                    $("#deleteConfirmation").modal("hide");
                }
            });
        }

        function doClear() {
            $("#importercd").val('');
            $("#exportercd").val('');
            $("#odt").val('');
            $("#yearmonth").val('');
            $("#cfc").val('');
            $("#reexp").val('');
            $("#statuscd").val('');

            $("#btnCreate").prop("disabled", true);
            $("#btnPrev").prop("disabled", true);
            $("#btnUpload").prop("disabled", true);
            $("#btnDelDtl").prop("disabled", true);
            $("#btn-download").prop("disabled", true);
            $("#insertLine").prop("disabled", true);
            $("#btnSearch").prop("disabled", false);

            $("#importercd").prop("disabled", false);
            $("#exportercd").prop("disabled", false);
            $("#odt").prop("disabled", false);
            $("#yearmonth").prop("disabled", false);
            $("#cfc").prop("disabled", false);
            $("#statuscd").prop("disabled", false);
        }

        function addTheFirstRow(e) {
            btnAddRow_onClick(e);
            $(".initialBtn").prop("disabled", true);
            $("input[type=checkbox]").prop("checked", false);
        }

        function btnAddRow_onClick(classAttr) {
            var $class = $(classAttr).attr('id');
            var tr = $class == 'insertLine' ? $("#tblDetail tbody tr:first") : $(classAttr).closest("tr");
            $(".tableScroll").scrollTop(0);
            $(".customTable tr, .customTable tbody td.stickyColumn").css("background", "#fff");

            tr.clone().addClass($class).css("background-color", "#E9E9E9").prependTo("#tblDetail tbody");
            $("#tblDetail tbody tr." + $class).find("td.stickyColumn").css("background-color", "#E9E9E9");


            loopThrougTableRow($("#tblDetail tbody tr." + $class + ""), $class);
        }

        function initializeEditCopyLine(e) {
            var tr = $(e).closest("tr");
            $("input[type=checkbox]").prop("checked", false);
            $(".initialBtn").prop("disabled", true);

            return tr;
        }

        function loopThrougTableRow(tr, classAttr) {
            tr.each(function (i, e) {
                var i = $(e).children('td');
                var val2 = classAttr == "insertLine" ? "" : i.eq(2).text();
                i.eq(2).html("<input type ='text' class='form-control " + 2 + " text-center' value='" + val2 + "' id='txtEq2'/>");
                for (var x = 3; x < i.length; x++) {
                    var val = classAttr == "insertLine" ? "" : i.eq(x).text();
                    i.eq(x).html("<input type ='number' class='form-control " + x + " text-center' value='" + val + "' id='txtEq" + x + "' style='width:30px'/>");
                    dataEditCopy.push(val);
                }
                i.eq(1).html(modifiedButton);
            });
            $("#tblDetail tbody tr:not(." + tr.attr("class") + ")").css({ "filter": "grayscale(50%)", "color": "#E6E6E6" });
        }

        function doSearch(page) {
            var validation = validate();
            if (validation) {
                $("#btnCreate").prop("disabled", false);
                $("#btnPrev").prop("disabled", false);
                $("#btnUpload").prop("disabled", false);
                $("#btnDelDtl").prop("disabled", false);
                $("#btn-download").prop("disabled", false);
                $("#insertLine").prop("disabled", false);

                $("#importercd").prop("disabled", true);
                $("#exportercd").prop("disabled", true);
                $("#odt").prop("disabled", true);
                $("#yearmonth").prop("disabled", true);
                $("#cfc").prop("disabled", true);
                $("#statuscd").prop("disabled", true);

                monthN = $("#yearmonth").val();

                // total monthly 1,2,3
                var date1 = $("#yearmonth").val();
                var newDate1 = date1.substring(0, 4) + '-' + date1.substring(4, 6)
                var date2 = $("#yearmonth").val();
                var newDate2 = date2.substring(0, 4) + '-' + date2.substring(4, 6)
                var date3 = $("#yearmonth").val();
                var newDate3 = date3.substring(0, 4) + '-' + date3.substring(4, 6)

                var packmontplus1 = new Date(newDate1);
                var packmontplus2 = new Date(newDate2);
                var packmontplus3 = new Date(newDate3);
                packmontplus1.setMonth(packmontplus1.getMonth() + 1);
                packmontplus2.setMonth(packmontplus2.getMonth() + 1);
                packmontplus3.setMonth(packmontplus3.getMonth() + 1);

                function formatDate1(date1) {
                    var d = new Date(date1),
                        month = '' + (d.getMonth() + 1),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult1 = formatDate1(packmontplus1);
                dateResult1 = dateResult1.substring(0, 7)
                dateResult1 = dateResult1.replace("-", "");

                function formatDate2(date2) {
                    var d = new Date(date2),
                        month = '' + (d.getMonth() + 2),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult2 = formatDate2(packmontplus2);
                dateResult2 = dateResult2.substring(0, 7)
                dateResult2 = dateResult2.replace("-", "");

                function formatDate3(date3) {
                    var d = new Date(date3),
                        month = '' + (d.getMonth() + 3),
                        day = '' + d.getDate(),
                        year = d.getFullYear();

                    if (month.length < 2)
                        month = '0' + month;
                    if (day.length < 2)
                        day = '0' + day;

                    return [year, month, day].join('-');
                }
                var dateResult3 = formatDate3(packmontplus3);
                dateResult3 = dateResult3.substring(0, 7)
                dateResult3 = dateResult3.replace("-", "");

                popUpProgressShow();
                $.ajax({
                    type: "POST",
                    url: "@Html.Toyota().Page.GetActionUrl("Search")",
                    data: {
                        COMPANY_CD: $("#comcd").text(),
                        STATUS_CD: $("#statuscd").val(),
                        IMPORTER_CD: $("#importercd").val(),
                        EXPORTER_CD: $("#exportercd").val(),
                        ORDER_TYPE: $("#odt").val(),
                        PACK_MONTH: $("#yearmonth").val(),
                        CFC: $("#cfc").val(),
                        DISABLE_FLAG: 0,
                        RE_EXPORT_CD: $("#reexp").val(),

                        YYMM: monthN,

                        rowsPerPage: $("#cbodisplay").val(),
                        currentPage: page,

                        TOTAL_MONTHLY_01: $("#yearmonth").val(),
                        TOTAL_MONTHLY_02: dateResult1,
                        TOTAL_MONTHLY_03: dateResult2,
                        TOTAL_MONTHLY_04: dateResult3
                    },
                    success: function (data) {
                        $("#gridTableCourse").html(data);
                        fixedHeader();
                        popUpProgressHide();
                    },
                    error: function (data) {
                        popUpProgressHide();
                        console.log(data);
                    }
                });
            }
        }

        function validate() {
            var valid = true;
            if ($("#importercd").val() == null || $("#importercd").val() == "" || $("#importercd").val() == undefined) {
                //$.messagepanel.show("Process Code should not be empty");
                showErrorMesgGrowl("Imported Code should not be empty");
                valid = false;
            }
            if ($("#exportercd").val() == null || $("#exportercd").val() == "" || $("#exportercd").val() == undefined) {
                //$.messagepanel.show("Year Month should not be empty");
                showErrorMesgGrowl("Exporter Code should not be empty");
                valid = false;
            }
            if ($("#odt").val() != 'R' && $("#odt").val() != 'U') {
                //$.messagepanel.show("Year Month should not be empty");
                showErrorMesgGrowl("Order Type Only R / U input");
                valid = false;
            }
            if ($("#yearmonth").val() == null || $("#yearmonth").val() == "" || $("#yearmonth").val() == undefined) {
                //$.messagepanel.show("Year Month should not be empty");
                showErrorMesgGrowl("Year Month should not be empty");
                valid = false;
            }
            if ($("#cfc").val() == null || $("#cfc").val() == "" || $("#cfc").val() == undefined) {
                //$.messagepanel.show("Year Month should not be empty");
                showErrorMesgGrowl("CFC should not be empty");
                valid = false;
            }
            if ($("#statuscd").val() == null || $("#statuscd").val() == "" || $("#statuscd").val() == undefined) {
                //$.messagepanel.show("Year Month should not be empty");
                showErrorMesgGrowl("Status Code should not be empty");
                valid = false;
            }

            return valid;
        }

        function onConfirmCreate() {
            var params = new Object();
            var datas = new Object();

            params.data = datas;
            var errorinf = 0;

            datas.COMPANY_CD = $("#comcd").text();
            datas.STATUS_CD = $("#statuscd").val();
            datas.IMPORTER_CD = $("#importercd").val();
            datas.EXPORTER_CD = $("#exportercd").val();
            datas.ORDER_TYPE = $("#odt").val();
            datas.PACK_MONTH = $("#yearmonth").val();
            datas.CFC = $("#cfc").val();

            if (datas.STATUS_CD == '' || datas.STATUS_CD == null) {
                showErrorMesgGrowl("Status Code should not be empty");
                errorinf = 1;
            }

            if (datas.IMPORTER_CD == '' || datas.IMPORTER_CD == null) {
                showErrorMesgGrowl("Importer Code should not be empty");
                errorinf = 1;
            }

            if (datas.EXPORTER_CD == '' || datas.EXPORTER_CD == null) {
                showErrorMesgGrowl("Exporter Code should not be empty");
                errorinf = 1;
            }

            if (datas.ORDER_TYPE == '' || datas.ORDER_TYPE == null) {
                showErrorMesgGrowl("Order Type should not be empty, choose select R or U");
                errorinf = 1;
            }

            if (datas.PACK_MONTH == '' || datas.PACK_MONTH == null) {
                showErrorMesgGrowl("Year Month should not be empty");
                errorinf = 1;
            }

            if (datas.CFC == '' || datas.CFC == null) {
                showErrorMesgGrowl("CFC should not be empty");
                errorinf = 1;
            }

            if (errorinf == 1) {

            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("OrderUpdateScreen/Create")',
                    contentType: 'application/json',
                    dataType: "json",
                    traditional: true,
                    data: JSON.stringify(params),
                    beforeSend: function () {
                        popUpProgressShow();
                        console.log(params);
                    },
                    success: function (data) {
                        if (data.Result == "ERROR") {
                            showErrorMesgGrowl(data.ErrMesgs);
                        }
                        else {
                            showSuccessMesgGrowl("Create Success");
                            onSaveSuccess();
                        }
                        popUpProgressHide();
                    },
                    error: function (data) {
                        popUpProgressHide();
                        showErrorMesgGrowl(data.ErrMesgs);
                    },
                    complete: function () {
                         popUpProgressHide();
                    }
                });
            }

        }

        function onConfirmPrev() {
            var params = new Object();
            var datas = new Object();

            params.data = datas;
            var errorinf = 0;

            datas.COMPANY_CD = $("#comcd").text();
            datas.STATUS_CD = $("#statuscd").val();
            datas.IMPORTER_CD = $("#importercd").val();
            datas.EXPORTER_CD = $("#exportercd").val();
            datas.ORDER_TYPE = $("#odt").val();
            datas.PACK_MONTH = $("#yearmonth").val();
            datas.CFC = $("#cfc").val();

            if (datas.STATUS_CD == '' || datas.STATUS_CD == null) {
                showErrorMesgGrowl("Status Code should not be empty");
                errorinf = 1;
            }

            if (datas.IMPORTER_CD == '' || datas.IMPORTER_CD == null) {
                showErrorMesgGrowl("Importer Code should not be empty");
                errorinf = 1;
            }

            if (datas.EXPORTER_CD == '' || datas.EXPORTER_CD == null) {
                showErrorMesgGrowl("Exporter Code should not be empty");
                errorinf = 1;
            }

            if (datas.ORDER_TYPE == '' || datas.ORDER_TYPE == null) {
                showErrorMesgGrowl("Order Type should not be empty, choose select R or U");
                errorinf = 1;
            }

            if (datas.PACK_MONTH == '' || datas.PACK_MONTH == null) {
                showErrorMesgGrowl("Year Month should not be empty");
                errorinf = 1;
            }

            if (datas.CFC == '' || datas.CFC == null) {
                showErrorMesgGrowl("CFC should not be empty");
                errorinf = 1;
            }

            if (errorinf == 1) {

            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("OrderUpdateScreen/Prev")',
                    contentType: 'application/json',
                    dataType: "json",
                    traditional: true,
                    data: JSON.stringify(params),
                    beforeSend: function () {
                        popUpProgressShow();
                        console.log(params);
                    },
                    success: function (data) {
                        if (data.Result == "ERROR") {
                            showErrorMesgGrowl(data.ErrMesgs);
                        }
                        else {
                            showSuccessMesgGrowl("Create Success");
                            onSaveSuccess();
                        }
                        popUpProgressHide();
                    },
                    error: function (data) {
                        popUpProgressHide();
                        showErrorMesgGrowl(data.ErrMesgs);
                    },
                    complete: function () {
                         popUpProgressHide();
                    }
                });
            }

        }

        function onSaveSuccess() {
            $("#previewUploadExcel").modal("hide");
            doSearch(1);
        }

        function onDownload() {
            // total monthly 1,2,3
            var date1 = $("#yearmonth").val();
            var newDate1 = date1.substring(0, 4) + '-' + date1.substring(4, 6)
            var date2 = $("#yearmonth").val();
            var newDate2 = date2.substring(0, 4) + '-' + date2.substring(4, 6)
            var date3 = $("#yearmonth").val();
            var newDate3 = date3.substring(0, 4) + '-' + date3.substring(4, 6)

            var packmontplus1 = new Date(newDate1);
            var packmontplus2 = new Date(newDate2);
            var packmontplus3 = new Date(newDate3);
            packmontplus1.setMonth(packmontplus1.getMonth() + 1);
            packmontplus2.setMonth(packmontplus2.getMonth() + 1);
            packmontplus3.setMonth(packmontplus3.getMonth() + 1);

            function formatDate1(date1) {
                var d = new Date(date1),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                return [year, month, day].join('-');
            }
            var dateResult1 = formatDate1(packmontplus1);
            dateResult1 = dateResult1.substring(0, 7)
            dateResult1 = dateResult1.replace("-", "");

            function formatDate2(date2) {
                var d = new Date(date2),
                    month = '' + (d.getMonth() + 2),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                return [year, month, day].join('-');
            }
            var dateResult2 = formatDate2(packmontplus2);
            dateResult2 = dateResult2.substring(0, 7)
            dateResult2 = dateResult2.replace("-", "");

            function formatDate3(date3) {
                var d = new Date(date3),
                    month = '' + (d.getMonth() + 3),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                return [year, month, day].join('-');
            }
            var dateResult3 = formatDate3(packmontplus3);
            dateResult3 = dateResult3.substring(0, 7)
            dateResult3 = dateResult3.replace("-", "");
             popUpProgressShow();
            //$.messagepanel.show("Download Success");
            $.fileDownload('@Url.Content("OrderUpdateScreen/DownloadFileExcel")', {
	            httpMethod: "POST",
	            data: {
                    COMPANY_CD: $("#comcd").text(),
                    STATUS_CD: $("#statuscd").val(),
                    IMPORTER_CD: $("#importercd").val(),
                    EXPORTER_CD: $("#exportercd").val(),
                    ORDER_TYPE: $("#odt").val(),
                    PACK_MONTH: $("#yearmonth").val(),
                    CFC: $("#cfc").val(),
                    DISABLE_FLAG: 0,
                    RE_EXPORT_CD: $("#reexp").val(),

                    YYMM: monthN,

	                RowsPerPage: $("#cbodisplay").val(),
                    CurrentPage: $(".pagination li.page-item.active a").text(),

                    TOTAL_MONTHLY_01: $("#yearmonth").val(),
                    TOTAL_MONTHLY_02: dateResult1,
                    TOTAL_MONTHLY_03: dateResult2,
                    TOTAL_MONTHLY_04: dateResult3
	            },
                successCallback: function (data) {
                    if (data == "ERROR") {
                        showErrorMesgGrowl(data);
                    }
                    else {
                        popUpProgressHide();
                        $('#confirmationDownload').css('display', 'none');
                        showSuccessMesgGrowl("Download Success");
                    }
	            },
	            failCallback: function (data) {
                    popUpProgressHide();
                    if (data == "ERROR") {
                        showErrorMesgGrowl("ERROR : Data not found");
                    }
                    else {
                        popUpProgressHide();
                        $('#confirmationDownload').css('display', 'none');
                        showSuccessMesgGrowl("Download Success");
                    }
                    $('#confirmationDownload').css('display', 'none');
	            }

            });

        }

        function datePicker() {
            $("._datepicker").datepicker({
                format: 'yyyymm',
                autoclose: true,
                minViewMode: 'months',
                container: '#MonthDatePicker'
            });
        }

         //Once the upload has completed
        //===================================================
        function onUploadDataFileSuccess(returnResult) {
            if (returnResult.ExceptionErrors != null || returnResult.ExceptionErrors != undefined) {
                showErrorMesgGrowl("<center>" + returnResult.ExceptionErrors[0] + "</center>");
            } else {
                if (returnResult.Params[0].length == 0) {
                    showErrorMesgGrowl("You cant upload the template with empty data");
                } else {
                    $("#importExcel").remove();
                    $('#previewAlert').hide();
                    $('#tblPreview tbody tr').remove();
                    $('#uploadDataFilePopup').modal('hide');
                    $('#btnEditUploaded').removeClass('saveEdit').text('Edit Upload');
                    addDataToTableUploaded(true, returnResult);
                }
            }
        }

        function addDataToTableUploaded(bool, returnResult) {
            var obj = returnResult.Params[0];
            listUploadDataExcel = new Object();
            var index = 1; indexPrev = 1;

            listUploadDataExcel.listData = [];
            for (var i = 0; i < obj.length; i++) {
                var dtl = new Object();
                dtl.COMPANY_CD = obj[i].COMPANY_CD;
                dtl.IMPORTER_CD = obj[i].IMPORTER_CD;
                dtl.EXPORTER_CD = obj[i].EXPORTER_CD;
                dtl.ORDER_TYPE = obj[i].ORDER_TYPE;
                dtl.PACK_MONTH = obj[i].PACK_MONTH;
                dtl.CFC = obj[i].CFC;
                dtl.STATUS_CD = obj[i].STATUS_CD;

                dtl.PART_NO = obj[i].PART_NO;
                dtl.RE_EXPORT_CD = obj[i].RE_EXPORT_CD;
                dtl.LOT_SIZE = obj[i].LOT_SIZE;
                dtl.TOTAL_MONTHLY_01 = obj[i].TOTAL_MONTHLY_01;
                dtl.TOTAL_MONTHLY_02 = obj[i].TOTAL_MONTHLY_02;
                dtl.TOTAL_MONTHLY_03 = obj[i].TOTAL_MONTHLY_03;
                dtl.TOTAL_MONTHLY_04 = obj[i].TOTAL_MONTHLY_04;
                dtl.DAY_ORD_VOL_01 = obj[i].DAY_ORD_VOL_01;
                dtl.DAY_ORD_VOL_02 = obj[i].DAY_ORD_VOL_02;
                dtl.DAY_ORD_VOL_03 = obj[i].DAY_ORD_VOL_03;
                dtl.DAY_ORD_VOL_04 = obj[i].DAY_ORD_VOL_04;
                dtl.DAY_ORD_VOL_05 = obj[i].DAY_ORD_VOL_05;
                dtl.DAY_ORD_VOL_06 = obj[i].DAY_ORD_VOL_06;
                dtl.DAY_ORD_VOL_07 = obj[i].DAY_ORD_VOL_07;
                dtl.DAY_ORD_VOL_08 = obj[i].DAY_ORD_VOL_08;
                dtl.DAY_ORD_VOL_09 = obj[i].DAY_ORD_VOL_09;
                dtl.DAY_ORD_VOL_10 = obj[i].DAY_ORD_VOL_10;
                dtl.DAY_ORD_VOL_11 = obj[i].DAY_ORD_VOL_11;
                dtl.DAY_ORD_VOL_12 = obj[i].DAY_ORD_VOL_12;
                dtl.DAY_ORD_VOL_13 = obj[i].DAY_ORD_VOL_13;
                dtl.DAY_ORD_VOL_14 = obj[i].DAY_ORD_VOL_14;
                dtl.DAY_ORD_VOL_15 = obj[i].DAY_ORD_VOL_15;
                dtl.DAY_ORD_VOL_16 = obj[i].DAY_ORD_VOL_16;
                dtl.DAY_ORD_VOL_17 = obj[i].DAY_ORD_VOL_17;
                dtl.DAY_ORD_VOL_18 = obj[i].DAY_ORD_VOL_18;
                dtl.DAY_ORD_VOL_19 = obj[i].DAY_ORD_VOL_19;
                dtl.DAY_ORD_VOL_20 = obj[i].DAY_ORD_VOL_20;
                dtl.DAY_ORD_VOL_21 = obj[i].DAY_ORD_VOL_21;
                dtl.DAY_ORD_VOL_22 = obj[i].DAY_ORD_VOL_22;
                dtl.DAY_ORD_VOL_23 = obj[i].DAY_ORD_VOL_23;
                dtl.DAY_ORD_VOL_24 = obj[i].DAY_ORD_VOL_24;
                dtl.DAY_ORD_VOL_25 = obj[i].DAY_ORD_VOL_25;
                dtl.DAY_ORD_VOL_26 = obj[i].DAY_ORD_VOL_26;
                dtl.DAY_ORD_VOL_27 = obj[i].DAY_ORD_VOL_27;
                dtl.DAY_ORD_VOL_28 = obj[i].DAY_ORD_VOL_28;
                dtl.DAY_ORD_VOL_29 = obj[i].DAY_ORD_VOL_29;
                dtl.DAY_ORD_VOL_30 = obj[i].DAY_ORD_VOL_30;
                dtl.DAY_ORD_VOL_31 = obj[i].DAY_ORD_VOL_31;


                listUploadDataExcel.listData.push(dtl);
            }

            if (returnResult.ErrMesgs >= 1 || returnResult.ErrMesgs != null || returnResult.ErrMesgs != undefined) {
                for (var i = 0; i < obj.length; i++) {
                    addRowPreviewExcel(obj[i], returnResult.ErrMesgs);
                    index++
                }
                var countEmptyField = checkIfEmpty(returnResult.ErrMesgs);
                //showErrorMesgGrowl("Upload is succeeded with several blank fields");
                showErrorMesgGrowl("Upload failed, blank fields or wrong format");
                $('#previewAlert').show();
                //$('strong#countEmpty').text(countEmptyField.length);
                //$("#previewUploadExcel").modal("show");
                //$('.modal-title').text('Preview Excel Upload');
                //$('#divPreviewExcel input, #divPreviewExcel select').prop('disabled', true);
                editSaveUpload(returnResult.ErrMesgs);
                $("#tblPreview").attr("style", "");
            } else {
                //Change it to yours
                var params = new Object();
                var data = new Object();

                params.ScreenMode = gScreenMode;
                params.data = data;
                //var url = '@Url.Content("OrderUpdateScreen/AddEditSave")';
                data.listData = []
                for (var i = 0; i < obj.length; i++) {
                    var dtl = new Object();

                    dtl.COMPANY_CD = obj[i].COMPANY_CD;
                    dtl.IMPORTER_CD = obj[i].IMPORTER_CD;
                    dtl.EXPORTER_CD = obj[i].EXPORTER_CD;
                    dtl.ORDER_TYPE = obj[i].ORDER_TYPE;
                    dtl.PACK_MONTH = obj[i].PACK_MONTH;
                    dtl.CFC = obj[i].CFC;
                    dtl.STATUS_CD = obj[i].STATUS_CD;

                    dtl.PART_NO = obj[i].PART_NO;
                    dtl.RE_EXPORT_CD = obj[i].RE_EXPORT_CD;
                    dtl.LOT_SIZE = obj[i].LOT_SIZE;
                    dtl.TOTAL_MONTHLY_01 = obj[i].TOTAL_MONTHLY_01;
                    dtl.TOTAL_MONTHLY_02 = obj[i].TOTAL_MONTHLY_02;
                    dtl.TOTAL_MONTHLY_03 = obj[i].TOTAL_MONTHLY_03;
                    dtl.TOTAL_MONTHLY_04 = obj[i].TOTAL_MONTHLY_04;
                    dtl.DAY_ORD_VOL_01 = obj[i].DAY_ORD_VOL_01;
                    dtl.DAY_ORD_VOL_02 = obj[i].DAY_ORD_VOL_02;
                    dtl.DAY_ORD_VOL_03 = obj[i].DAY_ORD_VOL_03;
                    dtl.DAY_ORD_VOL_04 = obj[i].DAY_ORD_VOL_04;
                    dtl.DAY_ORD_VOL_05 = obj[i].DAY_ORD_VOL_05;
                    dtl.DAY_ORD_VOL_06 = obj[i].DAY_ORD_VOL_06;
                    dtl.DAY_ORD_VOL_07 = obj[i].DAY_ORD_VOL_07;
                    dtl.DAY_ORD_VOL_08 = obj[i].DAY_ORD_VOL_08;
                    dtl.DAY_ORD_VOL_09 = obj[i].DAY_ORD_VOL_09;
                    dtl.DAY_ORD_VOL_10 = obj[i].DAY_ORD_VOL_10;
                    dtl.DAY_ORD_VOL_11 = obj[i].DAY_ORD_VOL_11;
                    dtl.DAY_ORD_VOL_12 = obj[i].DAY_ORD_VOL_12;
                    dtl.DAY_ORD_VOL_13 = obj[i].DAY_ORD_VOL_13;
                    dtl.DAY_ORD_VOL_14 = obj[i].DAY_ORD_VOL_14;
                    dtl.DAY_ORD_VOL_15 = obj[i].DAY_ORD_VOL_15;
                    dtl.DAY_ORD_VOL_16 = obj[i].DAY_ORD_VOL_16;
                    dtl.DAY_ORD_VOL_17 = obj[i].DAY_ORD_VOL_17;
                    dtl.DAY_ORD_VOL_18 = obj[i].DAY_ORD_VOL_18;
                    dtl.DAY_ORD_VOL_19 = obj[i].DAY_ORD_VOL_19;
                    dtl.DAY_ORD_VOL_20 = obj[i].DAY_ORD_VOL_20;
                    dtl.DAY_ORD_VOL_21 = obj[i].DAY_ORD_VOL_21;
                    dtl.DAY_ORD_VOL_22 = obj[i].DAY_ORD_VOL_22;
                    dtl.DAY_ORD_VOL_23 = obj[i].DAY_ORD_VOL_23;
                    dtl.DAY_ORD_VOL_24 = obj[i].DAY_ORD_VOL_24;
                    dtl.DAY_ORD_VOL_25 = obj[i].DAY_ORD_VOL_25;
                    dtl.DAY_ORD_VOL_26 = obj[i].DAY_ORD_VOL_26;
                    dtl.DAY_ORD_VOL_27 = obj[i].DAY_ORD_VOL_27;
                    dtl.DAY_ORD_VOL_28 = obj[i].DAY_ORD_VOL_28;
                    dtl.DAY_ORD_VOL_29 = obj[i].DAY_ORD_VOL_29;
                    dtl.DAY_ORD_VOL_30 = obj[i].DAY_ORD_VOL_30;
                    dtl.DAY_ORD_VOL_31 = obj[i].DAY_ORD_VOL_31;

                    dtl.DISABLE_FLAG = '0';

                    data.listData.push(dtl);
                }

                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("OrderUpdateScreen/AddEditSave")',
                    contentType: 'application/json',
                    dataType: "json",
                    traditional: true,
                    data: JSON.stringify(params),
                    beforeSend: function () {
                        popUpProgressShow();
                        console.log(params);
                    },
                    success: function (data) {
                        if (data.Result == "ERROR") {
                            showErrorMesgGrowl(data.ErrMesgs);
                            doSearch(1);
                        }
                        else {
                            showSuccessMesgGrowl("Save Success");
                            onSaveSuccess();
                        }
                        popUpProgressHide();
                    },
                    error: function (data) {
                        popUpProgressHide();
                        showErrorMesgGrowl(data.ErrMesgs);
                    },
                    complete: function () {
                        popUpProgressHide();
                    }
                });
                //Change it to yours
            }
        }

        function editSaveUpload(errMsg) {
            $(document).on('click', '#btnEditUploaded', function () {
                $(this).addClass('saveEdit').text('Save');
                $('#divPreviewExcel input, #divPreviewExcel select').prop('disabled', false);
                $('#importExcel').remove();
            })

            $(document).on('click', '.saveEdit', function () {
                $(this).removeClass('saveEdit').text('Edit Upload');
                $('#divPreviewExcel input, #divPreviewExcel select').prop('disabled', true);
                var countEmpty = checkIfEmpty(errMsg);
                if (countEmpty.length == 0) {
                    console.log(countEmpty.length);
                    $("#divPreviewExcel .text-right").append('<button type="button" class="btn btn-info btn-md" id="importExcel">Import </button>');
                } else {
                    $("#importExcel").remove();
                }
            });
        }

        function addRowPreviewExcel(object, errMsg) {

            $('#tblPreview tbody').append(
                '<tr class="' + indexPrev + '">\
                        <td>'+ indexPrev + '</td>\
                        <td>\
                            <input type="text" class="form-control input-sm" id="Company_Cd_' + indexPrev + '"\
                                value="' + (object.COMPANY_CD == null ? "" : object.COMPANY_CD) + '">\
                        </td>\
                        <td>\
                            <input type="text" class="form-control input-sm" id="Importer_Cd_' + indexPrev + '"\
                                value="' + (object.IMPORTER_CD == null ? "" : object.IMPORTER_CD) + '">\
                        </td>\
                        <td>\
                            <input type="text" class="form-control input-sm" id="Exporter_Cd_' + indexPrev + '"\
                                value="' + (object.EXPORTER_CD == null ? "" : object.EXPORTER_CD) + '">\
                        </td>\
                        <td>\
                            <input type="text" class="form-control input-sm" id="Order_Type_' + indexPrev + '"\
                                value="' + (object.ORDER_TYPE == null ? "" : object.ORDER_TYPE) + '">\
                        </td>\
                        <td>\
                            <input type="text" class="form-control input-sm _datepicker" id="Pack_Month_' + indexPrev + '"\
                                value="' + (object.PACK_MONTH == null ? "" : object.PACK_MONTH) + '">\
                        </td>\
                        <td>\
                            <input type="text" class="form-control input-sm" id="Cfc_' + indexPrev + '"\
                                value="' + (object.CFC == null ? "" : object.CFC) + '">\
                        </td>\
                        <td>\
                            <input type="text" class="form-control input-sm" id="Status_Cd_' + indexPrev + '"\
                                value="' + (object.STATUS_CD == null ? "" : object.STATUS_CD) + '">\
                        </td>\
                        <td>\
                            <input type="text" class="form-control input-sm" id="Part_No_' + indexPrev + '"\
                                value="' + (object.PART_NO == null ? "" : object.PART_NO) + '">\
                        </td>\
                        <td>\
                            <input type="text" class="form-control input-sm" id="Re_Exp_' + indexPrev + '"\
                                value="' + (object.RE_EXPORT_CD == null ? "" : object.RE_EXPORT_CD) + '">\
                        </td>\
                        <td>\
                            <input type="text" class="form-control input-sm" id="Lot_Size_' + indexPrev + '"\
                                value="' + (object.LOT_SIZE == null || object.LOT_SIZE == '0' ? "0" : object.LOT_SIZE) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Total_Month1_' + indexPrev + '"\
                                value="' + (object.TOTAL_MONTHLY_01 == null ? "0" : object.TOTAL_MONTHLY_01) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Total_Month2_' + indexPrev + '"\
                                value="' + (object.TOTAL_MONTHLY_02 == null ? "0" : object.TOTAL_MONTHLY_02) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Total_Month3_' + indexPrev + '"\
                                value="' + (object.TOTAL_MONTHLY_03 == null ? "0" : object.TOTAL_MONTHLY_03) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Total_Month4_' + indexPrev + '"\
                                value="' + (object.TOTAL_MONTHLY_04 == null ? "0" : object.TOTAL_MONTHLY_04) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_01_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_01 == null ? "0" : object.DAY_ORD_VOL_01) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_02_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_02 == null ? "0" : object.DAY_ORD_VOL_02) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_03_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_03 == null ? "0" : object.DAY_ORD_VOL_03) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_04_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_04 == null ? "0" : object.DAY_ORD_VOL_04) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_05_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_05 == null ? "0" : object.DAY_ORD_VOL_05) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_06_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_06 == null ? "0" : object.DAY_ORD_VOL_06) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_07_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_07 == null ? "0" : object.DAY_ORD_VOL_07) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_08_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_08 == null ? "0" : object.DAY_ORD_VOL_08) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_09_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_09 == null ? "0" : object.DAY_ORD_VOL_09) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_10_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_10 == null ? "0" : object.DAY_ORD_VOL_10) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_11_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_11 == null ? "0" : object.DAY_ORD_VOL_11) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_12_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_12 == null ? "0" : object.DAY_ORD_VOL_12) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_13_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_13 == null ? "0" : object.DAY_ORD_VOL_13) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_14_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_14 == null ? "0" : object.DAY_ORD_VOL_14) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_15_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_15 == null ? "0" : object.DAY_ORD_VOL_15) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_16_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_16 == null ? "0" : object.DAY_ORD_VOL_16) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_17_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_17 == null ? "0" : object.DAY_ORD_VOL_17) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_18_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_18 == null ? "0" : object.DAY_ORD_VOL_18) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_19_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_19 == null ? "0" : object.DAY_ORD_VOL_19) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_20_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_20 == null ? "0" : object.DAY_ORD_VOL_20) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_21_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_21 == null ? "0" : object.DAY_ORD_VOL_21) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_22_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_22 == null ? "0" : object.DAY_ORD_VOL_22) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_23_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_23 == null ? "0" : object.DAY_ORD_VOL_23) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_24_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_24 == null ? "0" : object.DAY_ORD_VOL_24) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_25_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_25 == null ? "0" : object.DAY_ORD_VOL_25) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_26_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_26 == null ? "0" : object.DAY_ORD_VOL_26) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_27_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_27 == null ? "0" : object.DAY_ORD_VOL_27) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_28_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_28 == null ? "0" : object.DAY_ORD_VOL_28) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_29_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_29 == null ? "0" : object.DAY_ORD_VOL_29) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_30_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_30 == null ? "0" : object.DAY_ORD_VOL_30) + '">\
                        </td>\
                        <td hidden>\
                            <input class="hidden" id="Day_Aloc_Ratio_31_' + indexPrev + '"\
                                value="' + (object.DAY_ORD_VOL_31 == null ? "0" : object.DAY_ORD_VOL_31) + '">\
                        </td>\
                    </tr>'
            );
            datePicker();
            clearOnPreviewEvent(indexPrev, errMsg);
            indexPrev++;
        }

        function clearOnPreviewEvent(i, errMsg) {
            $(document).on("change",
                "#Part_No_" + i
                + ",#Re_Exp_" + i
                + ",#Lot_Size_" + i
                + ",#Total_Month1_" + i
                + ",#Total_Month2_" + i
                + ",#Total_Month3_" + i
                + ",#Total_Month4_" + i
                + ",#Day_Aloc_Ratio_01_" + i
                + ",#Day_Aloc_Ratio_02_" + i
                + ",#Day_Aloc_Ratio_03_" + i
                + ",#Day_Aloc_Ratio_04_" + i
                + ",#Day_Aloc_Ratio_05_" + i
                + ",#Day_Aloc_Ratio_06_" + i
                + ",#Day_Aloc_Ratio_07_" + i
                + ",#Day_Aloc_Ratio_08_" + i
                + ",#Day_Aloc_Ratio_09_" + i
                + ",#Day_Aloc_Ratio_10_" + i
                + ",#Day_Aloc_Ratio_11_" + i
                + ",#Day_Aloc_Ratio_12_" + i
                + ",#Day_Aloc_Ratio_13_" + i
                + ",#Day_Aloc_Ratio_14_" + i
                + ",#Day_Aloc_Ratio_15_" + i
                + ",#Day_Aloc_Ratio_16_" + i
                + ",#Day_Aloc_Ratio_17_" + i
                + ",#Day_Aloc_Ratio_18_" + i
                + ",#Day_Aloc_Ratio_19_" + i
                + ",#Day_Aloc_Ratio_20_" + i
                + ",#Day_Aloc_Ratio_21_" + i
                + ",#Day_Aloc_Ratio_22_" + i
                + ",#Day_Aloc_Ratio_23_" + i
                + ",#Day_Aloc_Ratio_24_" + i
                + ",#Day_Aloc_Ratio_25_" + i
                + ",#Day_Aloc_Ratio_26_" + i
                + ",#Day_Aloc_Ratio_27_" + i
                + ",#Day_Aloc_Ratio_28_" + i
                + ",#Day_Aloc_Ratio_29_" + i
                + ",#Day_Aloc_Ratio_30_" + i
                + ",#Day_Aloc_Ratio_31_" + i, function () {
                   clearOnEvent(this, errMsg);
            });
        }

        function clearOnEvent(element, errMsg) {
            var id = $(element).attr('id');
            var lastChar = "";
                $(element).removeClass("emptyField mandatory");
                if ($(element).parent().hasClass("customTooltip")) {
                    $(element).unwrap();
                }
            var countEmptyPreview = checkIfEmpty(errMsg);
            $('strong#countEmpty').text(countEmptyPreview.length);
            if (countEmptyPreview.length == 0) {
                $("#previewAlert").hide();
            } else {
                $("#previewAlert").show();
            }
        }


        function checkIfEmpty(errMsg) {
            var countEmptyField = [];
            $(".customToolTipText").remove();
            $("#divPreviewExcel input.form-control, #divPreviewExcel select").each(function () {
                if ($(this).val() == "" || $(this).val() == null) {
                        if ($(this).parent().hasClass("customTooltip")) {
                            $(this).unwrap();
                        }
                        $(this).wrapAll("<div class='customTooltip'></div>")
                        $(this).addClass("mandatory");
                        $(this).after("<span class='customToolTipText'><small class='errorMsg'>Cell is empty</small><i></i></span>");
                        $(this).closest('tr').attr('id','hasEmptyCells');
                        countEmptyField.push(1);
                }
            });
            if (errMsg != null) {
                for (var j = 0; j < errMsg.length; j++) {
                    var str1 = errMsg[j].slice(0, errMsg[j].indexOf(" ")) + "_";
                    var str2 = errMsg[j].replace(/[^0-9]/gi, '');
                    var id = str1.concat(str2);
                    if ($("#" + id).parent().hasClass("customTooltip")) {
                        $("#" + id).next(".customToolTipText").find('.errorMsg').addClass(id);
                        $(".errorMsg." + id).text(errMsg[j]);
                    }
                }
            }
            $('#tblPreview tbody tr').each(function () {
                if ($(this).attr('id') != 'hasEmptyCells') {
                    $(this).hide();
                }
            });
            return countEmptyField;
        }
        //===================================================

    </script>
}